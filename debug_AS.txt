X++ Compiler - Version 1.0 - 2004
Lendo o arquivo exemplos/exemplo1.x . . .
Call:   program
  Call:   classlist
    Call:   classdecl
      Call:   modifs
        Call:   modifvisibility
          Consumed token: <"public" at line 3 column 1>
        Return: modifvisibility
      Return: modifs
      Consumed token: <"class" at line 3 column 8>
      Consumed token: <<IDENT>: "programateste01" at line 3 column 14>
      Call:   classbody
        Consumed token: <"{" at line 4 column 1>
        Call:   classlist(LOOKING AHEAD...)
          Call:   classdecl(LOOKING AHEAD...)
            Call:   modifs(LOOKING AHEAD...)
              Call:   modifvisibility(LOOKING AHEAD...)
                Visited token: <"private" at line 5 column 5>; Expected token: <"public">
                Visited token: <"private" at line 5 column 5>; Expected token: <"protected">
                Visited token: <"private" at line 5 column 5>; Expected token: <"private">
              Return: modifvisibility(LOOKAHEAD SUCCEEDED)
              Visited token: <"final" at line 5 column 13>; Expected token: <"final">
              Call:   classlist
                Call:   classdecl
                  Call:   modifs
                    Call:   modifvisibility
                      Consumed token: <"private" at line 5 column 5>
                    Return: modifvisibility
                    Consumed token: <"final" at line 5 column 13>
                  Return: modifs
                  Consumed token: <"class" at line 5 column 19>
                  Consumed token: <<IDENT>: "InnerClass" at line 5 column 25>
                  Call:   classbody
                    Consumed token: <"{" at line 5 column 36>
                    Call:   classlist(LOOKING AHEAD...)
                      Call:   classdecl(LOOKING AHEAD...)
                        Call:   modifs(LOOKING AHEAD...)
                          Call:   modifvisibility(LOOKING AHEAD...)
                            Visited token: <"}" at line 7 column 5>; Expected token: <"public">
                            Visited token: <"}" at line 7 column 5>; Expected token: <"protected">
                            Visited token: <"}" at line 7 column 5>; Expected token: <"private">
                          Return: modifvisibility(LOOKAHEAD FAILED)
                          Visited token: <"}" at line 7 column 5>; Expected token: <"final">
                        Return: modifs(LOOKAHEAD SUCCEEDED)
                        Visited token: <"}" at line 7 column 5>; Expected token: <"class">
                      Return: classdecl(LOOKAHEAD FAILED)
                    Return: classlist(LOOKAHEAD FAILED)
                    Call:   modifs(LOOKING AHEAD...)
                      Call:   modifvisibility(LOOKING AHEAD...)
                        Visited token: <"}" at line 7 column 5>; Expected token: <"public">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"protected">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"private">
                      Return: modifvisibility(LOOKAHEAD FAILED)
                      Visited token: <"}" at line 7 column 5>; Expected token: <"final">
                    Return: modifs(LOOKAHEAD SUCCEEDED)
                    Call:   vardecl(LOOKING AHEAD...)
                      Call:   types(LOOKING AHEAD...)
                        Visited token: <"}" at line 7 column 5>; Expected token: <"byte">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"short">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"int">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"long">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"float">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"double">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"char">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"string">
                        Visited token: <"}" at line 7 column 5>; Expected token: <<IDENT>>
                      Return: types(LOOKAHEAD FAILED)
                    Return: vardecl(LOOKAHEAD FAILED)
                    Call:   modifs(LOOKING AHEAD...)
                      Call:   modifvisibility(LOOKING AHEAD...)
                        Visited token: <"}" at line 7 column 5>; Expected token: <"public">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"protected">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"private">
                      Return: modifvisibility(LOOKAHEAD FAILED)
                      Visited token: <"}" at line 7 column 5>; Expected token: <"final">
                    Return: modifs(LOOKAHEAD SUCCEEDED)
                    Call:   methoddecl(LOOKING AHEAD...)
                      Call:   types(LOOKING AHEAD...)
                        Visited token: <"}" at line 7 column 5>; Expected token: <"byte">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"short">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"int">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"long">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"float">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"double">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"char">
                        Visited token: <"}" at line 7 column 5>; Expected token: <"string">
                        Visited token: <"}" at line 7 column 5>; Expected token: <<IDENT>>
                      Return: types(LOOKAHEAD FAILED)
                    Return: methoddecl(LOOKAHEAD FAILED)
                    Consumed token: <"}" at line 7 column 5>
                  Return: classbody
                Return: classdecl
                Call:   classlist(LOOKING AHEAD...)
                  Call:   classdecl(LOOKING AHEAD...)
                    Call:   modifs(LOOKING AHEAD...)
                      Call:   modifvisibility(LOOKING AHEAD...)
                        Visited token: <"char" at line 9 column 5>; Expected token: <"public">
                        Visited token: <"char" at line 9 column 5>; Expected token: <"protected">
                        Visited token: <"char" at line 9 column 5>; Expected token: <"private">
                      Return: modifvisibility(LOOKAHEAD FAILED)
                      Visited token: <"char" at line 9 column 5>; Expected token: <"final">
                    Return: modifs(LOOKAHEAD SUCCEEDED)
                    Visited token: <"char" at line 9 column 5>; Expected token: <"class">
                  Return: classdecl(LOOKAHEAD FAILED)
                Return: classlist(LOOKAHEAD FAILED)
              Return: classlist
              Call:   modifs(LOOKING AHEAD...)
                Call:   modifvisibility(LOOKING AHEAD...)
                  Visited token: <"char" at line 9 column 5>; Expected token: <"public">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"protected">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"private">
                Return: modifvisibility(LOOKAHEAD FAILED)
                Visited token: <"char" at line 9 column 5>; Expected token: <"final">
              Return: modifs(LOOKAHEAD SUCCEEDED)
              Call:   vardecl(LOOKING AHEAD...)
                Call:   types(LOOKING AHEAD...)
                  Visited token: <"char" at line 9 column 5>; Expected token: <"byte">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"short">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"int">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"long">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"float">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"double">
                  Visited token: <"char" at line 9 column 5>; Expected token: <"char">
                Return: types(LOOKAHEAD SUCCEEDED)
                Visited token: <<IDENT>: "cwh" at line 9 column 10>; Expected token: <<IDENT>>
                Visited token: <"=" at line 9 column 13>; Expected token: <"[">
                Call:   assignment(LOOKING AHEAD...)
                  Visited token: <"=" at line 9 column 13>; Expected token: <"=">
                  Call:   alocexpression(LOOKING AHEAD...)
                    Visited token: <<char_constant>: "'a'" at line 9 column 14>; Expected token: <"new">
                  Return: alocexpression(LOOKAHEAD FAILED)
                  Call:   expression(LOOKING AHEAD...)
                    Call:   numexpr(LOOKING AHEAD...)
                      Call:   term(LOOKING AHEAD...)
                        Call:   unaryexpr(LOOKING AHEAD...)
                          Visited token: <<char_constant>: "'a'" at line 9 column 14>; Expected token: <"+">
                          Visited token: <<char_constant>: "'a'" at line 9 column 14>; Expected token: <"-">
                          Call:   factor(LOOKING AHEAD...)
                            Visited token: <<char_constant>: "'a'" at line 9 column 14>; Expected token: <"!">
                            Visited token: <<char_constant>: "'a'" at line 9 column 14>; Expected token: <<char_constant>>
                            Call:   modifs
                            Return: modifs
                            Call:   vardecl
                              Call:   types
                                Consumed token: <"char" at line 9 column 5>
                              Return: types
                              Consumed token: <<IDENT>: "cwh" at line 9 column 10>
                              Call:   assignment
                                Consumed token: <"=" at line 9 column 13>
                                Call:   expression
                                  Call:   numexpr
                                    Call:   term
                                      Call:   unaryexpr
                                        Call:   factor
                                          Consumed token: <<char_constant>: "'a'" at line 9 column 14>
                                        Return: factor
                                      Return: unaryexpr
                                    Return: term
                                  Return: numexpr
                                Return: expression
                              Return: assignment
                            Return: vardecl
                            Consumed token: <";" at line 9 column 17>
                            Call:   modifs(LOOKING AHEAD...)
                              Call:   modifvisibility(LOOKING AHEAD...)
                                Visited token: <"final" at line 10 column 5>; Expected token: <"public">
                                Visited token: <"final" at line 10 column 5>; Expected token: <"protected">
                                Visited token: <"final" at line 10 column 5>; Expected token: <"private">
                              Return: modifvisibility(LOOKAHEAD FAILED)
                              Visited token: <"final" at line 10 column 5>; Expected token: <"final">
                            Return: modifs(LOOKAHEAD SUCCEEDED)
                            Call:   vardecl(LOOKING AHEAD...)
                              Call:   types(LOOKING AHEAD...)
                                Visited token: <"byte" at line 10 column 11>; Expected token: <"byte">
                              Return: types(LOOKAHEAD SUCCEEDED)
                              Visited token: <<IDENT>: "variavel3" at line 10 column 16>; Expected token: <<IDENT>>
                              Visited token: <"=" at line 10 column 25>; Expected token: <"[">
                              Call:   assignment(LOOKING AHEAD...)
                                Visited token: <"=" at line 10 column 25>; Expected token: <"=">
                                Call:   modifs
                                  Consumed token: <"final" at line 10 column 5>
                                Return: modifs
                                Call:   vardecl
                                  Call:   types
                                    Consumed token: <"byte" at line 10 column 11>
                                  Return: types
                                  Consumed token: <<IDENT>: "variavel3" at line 10 column 16>
                                  Call:   assignment
                                    Consumed token: <"=" at line 10 column 25>
                                    Call:   expression
                                      Call:   numexpr
                                        Call:   term
                                          Call:   unaryexpr
                                            Call:   factor
                                              Consumed token: <<byte_constant>: "1" at line 10 column 26>
                                            Return: factor
                                          Return: unaryexpr
                                        Return: term
                                      Return: numexpr
                                    Return: expression
                                  Return: assignment
                                Return: vardecl
                                Consumed token: <";" at line 10 column 27>
                                Call:   modifs(LOOKING AHEAD...)
                                  Call:   modifvisibility(LOOKING AHEAD...)
                                    Visited token: <"private" at line 11 column 5>; Expected token: <"public">
                                    Visited token: <"private" at line 11 column 5>; Expected token: <"protected">
                                    Visited token: <"private" at line 11 column 5>; Expected token: <"private">
                                  Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                  Visited token: <"final" at line 11 column 13>; Expected token: <"final">
                                Return: modifs(LOOKAHEAD SUCCEEDED)
                                Call:   vardecl(LOOKING AHEAD...)
                                  Call:   types(LOOKING AHEAD...)
                                    Visited token: <"short" at line 11 column 19>; Expected token: <"byte">
                                    Visited token: <"short" at line 11 column 19>; Expected token: <"short">
                                  Return: types(LOOKAHEAD SUCCEEDED)
                                  Visited token: <<IDENT>: "variavel4" at line 11 column 25>; Expected token: <<IDENT>>
                                  Call:   modifs
                                    Call:   modifvisibility
                                      Consumed token: <"private" at line 11 column 5>
                                    Return: modifvisibility
                                    Consumed token: <"final" at line 11 column 13>
                                  Return: modifs
                                  Call:   vardecl
                                    Call:   types
                                      Consumed token: <"short" at line 11 column 19>
                                    Return: types
                                    Consumed token: <<IDENT>: "variavel4" at line 11 column 25>
                                    Call:   assignment
                                      Consumed token: <"=" at line 11 column 34>
                                      Call:   expression
                                        Call:   numexpr
                                          Call:   term
                                            Call:   unaryexpr
                                              Call:   factor
                                                Consumed token: <<byte_constant>: "10" at line 11 column 35>
                                              Return: factor
                                            Return: unaryexpr
                                          Return: term
                                        Return: numexpr
                                      Return: expression
                                    Return: assignment
                                  Return: vardecl
                                  Consumed token: <";" at line 11 column 37>
                                  Call:   modifs(LOOKING AHEAD...)
                                    Call:   modifvisibility(LOOKING AHEAD...)
                                      Visited token: <"protected" at line 12 column 5>; Expected token: <"public">
                                      Visited token: <"protected" at line 12 column 5>; Expected token: <"protected">
                                    Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                    Visited token: <"long" at line 12 column 15>; Expected token: <"final">
                                  Return: modifs(LOOKAHEAD SUCCEEDED)
                                  Call:   vardecl(LOOKING AHEAD...)
                                    Call:   types(LOOKING AHEAD...)
                                      Visited token: <"long" at line 12 column 15>; Expected token: <"byte">
                                      Visited token: <"long" at line 12 column 15>; Expected token: <"short">
                                      Visited token: <"long" at line 12 column 15>; Expected token: <"int">
                                      Visited token: <"long" at line 12 column 15>; Expected token: <"long">
                                    Return: types(LOOKAHEAD SUCCEEDED)
                                    Visited token: <<IDENT>: "variavel5" at line 12 column 20>; Expected token: <<IDENT>>
                                    Visited token: <"=" at line 12 column 29>; Expected token: <"[">
                                    Call:   assignment(LOOKING AHEAD...)
                                      Visited token: <"=" at line 12 column 29>; Expected token: <"=">
                                      Call:   modifs
                                        Call:   modifvisibility
                                          Consumed token: <"protected" at line 12 column 5>
                                        Return: modifvisibility
                                      Return: modifs
                                      Call:   vardecl
                                        Call:   types
                                          Consumed token: <"long" at line 12 column 15>
                                        Return: types
                                        Consumed token: <<IDENT>: "variavel5" at line 12 column 20>
                                        Call:   assignment
                                          Consumed token: <"=" at line 12 column 29>
                                          Call:   expression
                                            Call:   numexpr
                                              Call:   term
                                                Call:   unaryexpr
                                                  Call:   factor
                                                    Consumed token: <<double_constant>: "10.1" at line 12 column 30>
                                                  Return: factor
                                                Return: unaryexpr
                                              Return: term
                                            Return: numexpr
                                          Return: expression
                                        Return: assignment
                                      Return: vardecl
                                      Consumed token: <";" at line 12 column 34>
                                      Call:   modifs(LOOKING AHEAD...)
                                        Call:   modifvisibility(LOOKING AHEAD...)
                                          Visited token: <"public" at line 13 column 5>; Expected token: <"public">
                                        Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                        Visited token: <"float" at line 13 column 12>; Expected token: <"final">
                                      Return: modifs(LOOKAHEAD SUCCEEDED)
                                      Call:   vardecl(LOOKING AHEAD...)
                                        Call:   types(LOOKING AHEAD...)
                                          Visited token: <"float" at line 13 column 12>; Expected token: <"byte">
                                          Visited token: <"float" at line 13 column 12>; Expected token: <"short">
                                          Visited token: <"float" at line 13 column 12>; Expected token: <"int">
                                          Visited token: <"float" at line 13 column 12>; Expected token: <"long">
                                          Visited token: <"float" at line 13 column 12>; Expected token: <"float">
                                        Return: types(LOOKAHEAD SUCCEEDED)
                                        Visited token: <<IDENT>: "variavel1" at line 13 column 18>; Expected token: <<IDENT>>
                                        Visited token: <"=" at line 13 column 27>; Expected token: <"[">
                                        Call:   assignment(LOOKING AHEAD...)
                                          Visited token: <"=" at line 13 column 27>; Expected token: <"=">
                                          Call:   modifs
                                            Call:   modifvisibility
                                              Consumed token: <"public" at line 13 column 5>
                                            Return: modifvisibility
                                          Return: modifs
                                          Call:   vardecl
                                            Call:   types
                                              Consumed token: <"float" at line 13 column 12>
                                            Return: types
                                            Consumed token: <<IDENT>: "variavel1" at line 13 column 18>
                                            Call:   assignment
                                              Consumed token: <"=" at line 13 column 27>
                                              Call:   expression
                                                Call:   numexpr
                                                  Call:   term
                                                    Call:   unaryexpr
                                                      Call:   factor
                                                        Consumed token: <<double_constant>: "7.0" at line 13 column 28>
                                                      Return: factor
                                                    Return: unaryexpr
                                                  Return: term
                                                Return: numexpr
                                              Return: expression
                                            Return: assignment
                                          Return: vardecl
                                          Consumed token: <";" at line 13 column 31>
                                          Call:   modifs(LOOKING AHEAD...)
                                            Call:   modifvisibility(LOOKING AHEAD...)
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"public">
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"protected">
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"private">
                                            Return: modifvisibility(LOOKAHEAD FAILED)
                                            Visited token: <"float" at line 14 column 5>; Expected token: <"final">
                                          Return: modifs(LOOKAHEAD SUCCEEDED)
                                          Call:   vardecl(LOOKING AHEAD...)
                                            Call:   types(LOOKING AHEAD...)
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"byte">
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"short">
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"int">
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"long">
                                              Visited token: <"float" at line 14 column 5>; Expected token: <"float">
                                            Return: types(LOOKAHEAD SUCCEEDED)
                                            Visited token: <<IDENT>: "variavel2" at line 14 column 11>; Expected token: <<IDENT>>
                                            Visited token: <"=" at line 14 column 20>; Expected token: <"[">
                                            Call:   assignment(LOOKING AHEAD...)
                                              Visited token: <"=" at line 14 column 20>; Expected token: <"=">
                                              Call:   alocexpression(LOOKING AHEAD...)
                                                Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <"new">
                                              Return: alocexpression(LOOKAHEAD FAILED)
                                              Call:   expression(LOOKING AHEAD...)
                                                Call:   numexpr(LOOKING AHEAD...)
                                                  Call:   term(LOOKING AHEAD...)
                                                    Call:   unaryexpr(LOOKING AHEAD...)
                                                      Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <"+">
                                                      Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <"-">
                                                      Call:   factor(LOOKING AHEAD...)
                                                        Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <"!">
                                                        Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <<char_constant>>
                                                        Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <<byte_constant>>
                                                        Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <<int_constant>>
                                                        Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <<float_constant>>
                                                        Visited token: <<double_constant>: "10.1" at line 14 column 21>; Expected token: <<double_constant>>
                                                        Call:   modifs
                                                        Return: modifs
                                                        Call:   vardecl
                                                          Call:   types
                                                            Consumed token: <"float" at line 14 column 5>
                                                          Return: types
                                                          Consumed token: <<IDENT>: "variavel2" at line 14 column 11>
                                                          Call:   assignment
                                                            Consumed token: <"=" at line 14 column 20>
                                                            Call:   expression
                                                              Call:   numexpr
                                                                Call:   term
                                                                  Call:   unaryexpr
                                                                    Call:   factor
                                                                      Consumed token: <<double_constant>: "10.1" at line 14 column 21>
                                                                    Return: factor
                                                                  Return: unaryexpr
                                                                Return: term
                                                              Return: numexpr
                                                            Return: expression
                                                          Return: assignment
                                                        Return: vardecl
                                                        Consumed token: <";" at line 14 column 25>
                                                        Call:   modifs(LOOKING AHEAD...)
                                                          Call:   modifvisibility(LOOKING AHEAD...)
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"public">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"protected">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"private">
                                                          Return: modifvisibility(LOOKAHEAD FAILED)
                                                          Visited token: <"string" at line 15 column 5>; Expected token: <"final">
                                                        Return: modifs(LOOKAHEAD SUCCEEDED)
                                                        Call:   vardecl(LOOKING AHEAD...)
                                                          Call:   types(LOOKING AHEAD...)
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"byte">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"short">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"int">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"long">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"float">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"double">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"char">
                                                            Visited token: <"string" at line 15 column 5>; Expected token: <"string">
                                                          Return: types(LOOKAHEAD SUCCEEDED)
                                                          Visited token: <<IDENT>: "str" at line 15 column 12>; Expected token: <<IDENT>>
                                                          Visited token: <"=" at line 15 column 16>; Expected token: <"[">
                                                          Call:   assignment(LOOKING AHEAD...)
                                                            Visited token: <"=" at line 15 column 16>; Expected token: <"=">
                                                            Call:   alocexpression(LOOKING AHEAD...)
                                                              Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <"new">
                                                            Return: alocexpression(LOOKAHEAD FAILED)
                                                            Call:   expression(LOOKING AHEAD...)
                                                              Call:   numexpr(LOOKING AHEAD...)
                                                                Call:   term(LOOKING AHEAD...)
                                                                  Call:   unaryexpr(LOOKING AHEAD...)
                                                                    Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <"+">
                                                                    Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <"-">
                                                                    Call:   factor(LOOKING AHEAD...)
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <"!">
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <<char_constant>>
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <<byte_constant>>
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <<int_constant>>
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <<float_constant>>
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <<double_constant>>
                                                                      Visited token: <<string_constant>: ""ab"" at line 15 column 18>; Expected token: <<string_constant>>
                                                                      Call:   modifs
                                                                      Return: modifs
                                                                      Call:   vardecl
                                                                        Call:   types
                                                                          Consumed token: <"string" at line 15 column 5>
                                                                        Return: types
                                                                        Consumed token: <<IDENT>: "str" at line 15 column 12>
                                                                        Call:   assignment
                                                                          Consumed token: <"=" at line 15 column 16>
                                                                          Call:   expression
                                                                            Call:   numexpr
                                                                              Call:   term
                                                                                Call:   unaryexpr
                                                                                  Call:   factor
                                                                                    Consumed token: <<string_constant>: ""ab"" at line 15 column 18>
                                                                                  Return: factor
                                                                                Return: unaryexpr
                                                                              Return: term
                                                                            Return: numexpr
                                                                          Return: expression
                                                                        Return: assignment
                                                                      Return: vardecl
                                                                      Consumed token: <";" at line 15 column 22>
                                                                      Call:   modifs(LOOKING AHEAD...)
                                                                        Call:   modifvisibility(LOOKING AHEAD...)
                                                                          Visited token: <"int" at line 16 column 5>; Expected token: <"public">
                                                                          Visited token: <"int" at line 16 column 5>; Expected token: <"protected">
                                                                          Visited token: <"int" at line 16 column 5>; Expected token: <"private">
                                                                        Return: modifvisibility(LOOKAHEAD FAILED)
                                                                        Visited token: <"int" at line 16 column 5>; Expected token: <"final">
                                                                      Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                        Call:   types(LOOKING AHEAD...)
                                                                          Visited token: <"int" at line 16 column 5>; Expected token: <"byte">
                                                                          Visited token: <"int" at line 16 column 5>; Expected token: <"short">
                                                                          Visited token: <"int" at line 16 column 5>; Expected token: <"int">
                                                                        Return: types(LOOKAHEAD SUCCEEDED)
                                                                        Visited token: <<IDENT>: "idade" at line 16 column 9>; Expected token: <<IDENT>>
                                                                        Visited token: <"=" at line 16 column 15>; Expected token: <"[">
                                                                        Call:   assignment(LOOKING AHEAD...)
                                                                          Visited token: <"=" at line 16 column 15>; Expected token: <"=">
                                                                          Call:   alocexpression(LOOKING AHEAD...)
                                                                            Visited token: <<byte_constant>: "0" at line 16 column 17>; Expected token: <"new">
                                                                          Return: alocexpression(LOOKAHEAD FAILED)
                                                                          Call:   expression(LOOKING AHEAD...)
                                                                            Call:   numexpr(LOOKING AHEAD...)
                                                                              Call:   term(LOOKING AHEAD...)
                                                                                Call:   unaryexpr(LOOKING AHEAD...)
                                                                                  Visited token: <<byte_constant>: "0" at line 16 column 17>; Expected token: <"+">
                                                                                  Visited token: <<byte_constant>: "0" at line 16 column 17>; Expected token: <"-">
                                                                                  Call:   factor(LOOKING AHEAD...)
                                                                                    Visited token: <<byte_constant>: "0" at line 16 column 17>; Expected token: <"!">
                                                                                    Visited token: <<byte_constant>: "0" at line 16 column 17>; Expected token: <<char_constant>>
                                                                                    Visited token: <<byte_constant>: "0" at line 16 column 17>; Expected token: <<byte_constant>>
                                                                                    Call:   modifs
                                                                                    Return: modifs
                                                                                    Call:   vardecl
                                                                                      Call:   types
                                                                                        Consumed token: <"int" at line 16 column 5>
                                                                                      Return: types
                                                                                      Consumed token: <<IDENT>: "idade" at line 16 column 9>
                                                                                      Call:   assignment
                                                                                        Consumed token: <"=" at line 16 column 15>
                                                                                        Call:   expression
                                                                                          Call:   numexpr
                                                                                            Call:   term
                                                                                              Call:   unaryexpr
                                                                                                Call:   factor
                                                                                                  Consumed token: <<byte_constant>: "0" at line 16 column 17>
                                                                                                Return: factor
                                                                                              Return: unaryexpr
                                                                                            Return: term
                                                                                          Return: numexpr
                                                                                        Return: expression
                                                                                      Return: assignment
                                                                                    Return: vardecl
                                                                                    Consumed token: <";" at line 16 column 18>
                                                                                    Call:   modifs(LOOKING AHEAD...)
                                                                                      Call:   modifvisibility(LOOKING AHEAD...)
                                                                                        Visited token: <"int" at line 17 column 5>; Expected token: <"public">
                                                                                        Visited token: <"int" at line 17 column 5>; Expected token: <"protected">
                                                                                        Visited token: <"int" at line 17 column 5>; Expected token: <"private">
                                                                                      Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                      Visited token: <"int" at line 17 column 5>; Expected token: <"final">
                                                                                    Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                        Visited token: <"int" at line 17 column 5>; Expected token: <"byte">
                                                                                        Visited token: <"int" at line 17 column 5>; Expected token: <"short">
                                                                                        Visited token: <"int" at line 17 column 5>; Expected token: <"int">
                                                                                      Return: types(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "cont" at line 17 column 9>; Expected token: <<IDENT>>
                                                                                      Visited token: <";" at line 17 column 13>; Expected token: <"[">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <";" at line 17 column 13>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                      Visited token: <";" at line 17 column 13>; Expected token: <",">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <";" at line 17 column 13>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                    Return: vardecl(LOOKAHEAD SUCCEEDED)
                                                                                    Visited token: <";" at line 17 column 13>; Expected token: <";">
                                                                                    Call:   modifs
                                                                                    Return: modifs
                                                                                    Call:   vardecl
                                                                                      Call:   types
                                                                                        Consumed token: <"int" at line 17 column 5>
                                                                                      Return: types
                                                                                      Consumed token: <<IDENT>: "cont" at line 17 column 9>
                                                                                    Return: vardecl
                                                                                    Consumed token: <";" at line 17 column 13>
                                                                                    Call:   modifs(LOOKING AHEAD...)
                                                                                      Call:   modifvisibility(LOOKING AHEAD...)
                                                                                        Visited token: <"int" at line 18 column 5>; Expected token: <"public">
                                                                                        Visited token: <"int" at line 18 column 5>; Expected token: <"protected">
                                                                                        Visited token: <"int" at line 18 column 5>; Expected token: <"private">
                                                                                      Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                      Visited token: <"int" at line 18 column 5>; Expected token: <"final">
                                                                                    Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                        Visited token: <"int" at line 18 column 5>; Expected token: <"byte">
                                                                                        Visited token: <"int" at line 18 column 5>; Expected token: <"short">
                                                                                        Visited token: <"int" at line 18 column 5>; Expected token: <"int">
                                                                                      Return: types(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "cont2" at line 18 column 9>; Expected token: <<IDENT>>
                                                                                      Visited token: <";" at line 18 column 14>; Expected token: <"[">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <";" at line 18 column 14>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                      Visited token: <";" at line 18 column 14>; Expected token: <",">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <";" at line 18 column 14>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                    Return: vardecl(LOOKAHEAD SUCCEEDED)
                                                                                    Visited token: <";" at line 18 column 14>; Expected token: <";">
                                                                                    Call:   modifs
                                                                                    Return: modifs
                                                                                    Call:   vardecl
                                                                                      Call:   types
                                                                                        Consumed token: <"int" at line 18 column 5>
                                                                                      Return: types
                                                                                      Consumed token: <<IDENT>: "cont2" at line 18 column 9>
                                                                                    Return: vardecl
                                                                                    Consumed token: <";" at line 18 column 14>
                                                                                    Call:   modifs(LOOKING AHEAD...)
                                                                                      Call:   modifvisibility(LOOKING AHEAD...)
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"public">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"protected">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"private">
                                                                                      Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                      Visited token: <"string" at line 19 column 5>; Expected token: <"final">
                                                                                    Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"byte">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"short">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"int">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"long">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"float">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"double">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"char">
                                                                                        Visited token: <"string" at line 19 column 5>; Expected token: <"string">
                                                                                      Return: types(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "genero" at line 19 column 12>; Expected token: <<IDENT>>
                                                                                      Visited token: <";" at line 19 column 18>; Expected token: <"[">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <";" at line 19 column 18>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                      Visited token: <";" at line 19 column 18>; Expected token: <",">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <";" at line 19 column 18>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                    Return: vardecl(LOOKAHEAD SUCCEEDED)
                                                                                    Visited token: <";" at line 19 column 18>; Expected token: <";">
                                                                                    Call:   modifs
                                                                                    Return: modifs
                                                                                    Call:   vardecl
                                                                                      Call:   types
                                                                                        Consumed token: <"string" at line 19 column 5>
                                                                                      Return: types
                                                                                      Consumed token: <<IDENT>: "genero" at line 19 column 12>
                                                                                    Return: vardecl
                                                                                    Consumed token: <";" at line 19 column 18>
                                                                                    Call:   modifs(LOOKING AHEAD...)
                                                                                      Call:   modifvisibility(LOOKING AHEAD...)
                                                                                        Visited token: <"public" at line 21 column 5>; Expected token: <"public">
                                                                                      Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"final">
                                                                                    Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"byte">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"short">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"int">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"long">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"float">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"double">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"char">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"string">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <<IDENT>>
                                                                                      Return: types(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "calcFor" at line 21 column 17>; Expected token: <<IDENT>>
                                                                                      Visited token: <"(" at line 21 column 24>; Expected token: <"[">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <"(" at line 21 column 24>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                      Visited token: <"(" at line 21 column 24>; Expected token: <",">
                                                                                      Call:   assignment(LOOKING AHEAD...)
                                                                                        Visited token: <"(" at line 21 column 24>; Expected token: <"=">
                                                                                      Return: assignment(LOOKAHEAD FAILED)
                                                                                    Return: vardecl(LOOKAHEAD SUCCEEDED)
                                                                                    Visited token: <"(" at line 21 column 24>; Expected token: <";">
                                                                                    Call:   modifs(LOOKING AHEAD...)
                                                                                      Call:   modifvisibility(LOOKING AHEAD...)
                                                                                        Visited token: <"public" at line 21 column 5>; Expected token: <"public">
                                                                                      Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"final">
                                                                                    Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                    Call:   methoddecl(LOOKING AHEAD...)
                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"byte">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"short">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"int">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"long">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"float">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"double">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"char">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <"string">
                                                                                        Visited token: <<IDENT>: "void" at line 21 column 12>; Expected token: <<IDENT>>
                                                                                      Return: types(LOOKAHEAD SUCCEEDED)
                                                                                      Visited token: <<IDENT>: "calcFor" at line 21 column 17>; Expected token: <"[">
                                                                                      Visited token: <<IDENT>: "calcFor" at line 21 column 17>; Expected token: <<IDENT>>
                                                                                      Call:   methodbody(LOOKING AHEAD...)
                                                                                        Visited token: <"(" at line 21 column 24>; Expected token: <"(">
                                                                                        Call:   modifs
                                                                                          Call:   modifvisibility
                                                                                            Consumed token: <"public" at line 21 column 5>
                                                                                          Return: modifvisibility
                                                                                        Return: modifs
                                                                                        Call:   methoddecl
                                                                                          Call:   types
                                                                                            Consumed token: <<IDENT>: "void" at line 21 column 12>
                                                                                          Return: types
                                                                                          Consumed token: <<IDENT>: "calcFor" at line 21 column 17>
                                                                                          Call:   methodbody
                                                                                            Consumed token: <"(" at line 21 column 24>
                                                                                            Call:   paramlist
                                                                                            Return: paramlist
                                                                                            Consumed token: <")" at line 21 column 25>
                                                                                            Call:   statement
                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"byte">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"short">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"int">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"long">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"float">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"double">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"char">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <"string">
                                                                                                  Visited token: <"{" at line 21 column 27>; Expected token: <<IDENT>>
                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                              Consumed token: <"{" at line 21 column 27>
                                                                                              Call:   statlist
                                                                                                Call:   statement
                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"byte">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"short">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"int">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"long">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"float">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"double">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"char">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <"string">
                                                                                                      Visited token: <"for" at line 22 column 9>; Expected token: <<IDENT>>
                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                  Call:   forstat
                                                                                                    Consumed token: <"for" at line 22 column 9>
                                                                                                    Consumed token: <"(" at line 22 column 13>
                                                                                                    Call:   atribstat
                                                                                                      Call:   lvalue
                                                                                                        Consumed token: <<IDENT>: "cont" at line 22 column 14>
                                                                                                      Return: lvalue
                                                                                                      Call:   assignment
                                                                                                        Consumed token: <"=" at line 22 column 19>
                                                                                                        Call:   expression
                                                                                                          Call:   numexpr
                                                                                                            Call:   term
                                                                                                              Call:   unaryexpr
                                                                                                                Call:   factor
                                                                                                                  Consumed token: <<byte_constant>: "0" at line 22 column 21>
                                                                                                                Return: factor
                                                                                                              Return: unaryexpr
                                                                                                            Return: term
                                                                                                          Return: numexpr
                                                                                                        Return: expression
                                                                                                      Return: assignment
                                                                                                    Return: atribstat
                                                                                                    Consumed token: <";" at line 22 column 22>
                                                                                                    Call:   expression
                                                                                                      Call:   numexpr
                                                                                                        Call:   term
                                                                                                          Call:   unaryexpr
                                                                                                            Call:   factor
                                                                                                              Call:   lvalue
                                                                                                                Consumed token: <<IDENT>: "cont" at line 22 column 24>
                                                                                                              Return: lvalue
                                                                                                            Return: factor
                                                                                                          Return: unaryexpr
                                                                                                        Return: term
                                                                                                      Return: numexpr
                                                                                                      Consumed token: <"<" at line 22 column 29>
                                                                                                      Call:   numexpr
                                                                                                        Call:   term
                                                                                                          Call:   unaryexpr
                                                                                                            Call:   factor
                                                                                                              Call:   lvalue
                                                                                                                Consumed token: <<IDENT>: "variavel1" at line 22 column 31>
                                                                                                              Return: lvalue
                                                                                                            Return: factor
                                                                                                          Return: unaryexpr
                                                                                                        Return: term
                                                                                                      Return: numexpr
                                                                                                    Return: expression
                                                                                                    Consumed token: <";" at line 22 column 40>
                                                                                                    Call:   atribstat
                                                                                                      Call:   lvalue
                                                                                                        Consumed token: <<IDENT>: "cont" at line 22 column 42>
                                                                                                      Return: lvalue
                                                                                                      Call:   assignment
                                                                                                        Consumed token: <"=" at line 22 column 47>
                                                                                                        Call:   expression
                                                                                                          Call:   numexpr
                                                                                                            Call:   term
                                                                                                              Call:   unaryexpr
                                                                                                                Call:   factor
                                                                                                                  Consumed token: <"(" at line 22 column 49>
                                                                                                                  Call:   expression
                                                                                                                    Call:   numexpr
                                                                                                                      Call:   term
                                                                                                                        Call:   unaryexpr
                                                                                                                          Call:   factor
                                                                                                                            Call:   lvalue
                                                                                                                              Consumed token: <<IDENT>: "cont" at line 22 column 50>
                                                                                                                            Return: lvalue
                                                                                                                          Return: factor
                                                                                                                        Return: unaryexpr
                                                                                                                      Return: term
                                                                                                                      Consumed token: <"+" at line 22 column 55>
                                                                                                                      Call:   term
                                                                                                                        Call:   unaryexpr
                                                                                                                          Call:   factor
                                                                                                                            Consumed token: <<byte_constant>: "1" at line 22 column 57>
                                                                                                                          Return: factor
                                                                                                                        Return: unaryexpr
                                                                                                                      Return: term
                                                                                                                    Return: numexpr
                                                                                                                  Return: expression
                                                                                                                  Consumed token: <")" at line 22 column 58>
                                                                                                                Return: factor
                                                                                                              Return: unaryexpr
                                                                                                            Return: term
                                                                                                          Return: numexpr
                                                                                                        Return: expression
                                                                                                      Return: assignment
                                                                                                    Return: atribstat
                                                                                                    Consumed token: <")" at line 22 column 59>
                                                                                                    Call:   statement
                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"byte">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"short">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"int">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"long">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"float">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"double">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"char">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <"string">
                                                                                                          Visited token: <"{" at line 22 column 61>; Expected token: <<IDENT>>
                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                      Consumed token: <"{" at line 22 column 61>
                                                                                                      Call:   statlist
                                                                                                        Call:   statement
                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"byte">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"short">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"int">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"long">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"float">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"double">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"char">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <"string">
                                                                                                              Visited token: <"for" at line 23 column 13>; Expected token: <<IDENT>>
                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                          Call:   forstat
                                                                                                            Consumed token: <"for" at line 23 column 13>
                                                                                                            Consumed token: <"(" at line 23 column 16>
                                                                                                            Call:   atribstat
                                                                                                              Call:   lvalue
                                                                                                                Consumed token: <<IDENT>: "cont2" at line 23 column 17>
                                                                                                              Return: lvalue
                                                                                                              Call:   assignment
                                                                                                                Consumed token: <"=" at line 23 column 23>
                                                                                                                Call:   expression
                                                                                                                  Call:   numexpr
                                                                                                                    Call:   term
                                                                                                                      Call:   unaryexpr
                                                                                                                        Call:   factor
                                                                                                                          Consumed token: <<byte_constant>: "0" at line 23 column 25>
                                                                                                                        Return: factor
                                                                                                                      Return: unaryexpr
                                                                                                                    Return: term
                                                                                                                  Return: numexpr
                                                                                                                Return: expression
                                                                                                              Return: assignment
                                                                                                            Return: atribstat
                                                                                                            Consumed token: <";" at line 23 column 26>
                                                                                                            Call:   expression
                                                                                                              Call:   numexpr
                                                                                                                Call:   term
                                                                                                                  Call:   unaryexpr
                                                                                                                    Call:   factor
                                                                                                                      Call:   lvalue
                                                                                                                        Consumed token: <<IDENT>: "cont2" at line 23 column 28>
                                                                                                                      Return: lvalue
                                                                                                                    Return: factor
                                                                                                                  Return: unaryexpr
                                                                                                                Return: term
                                                                                                              Return: numexpr
                                                                                                              Consumed token: <"<" at line 23 column 34>
                                                                                                              Call:   numexpr
                                                                                                                Call:   term
                                                                                                                  Call:   unaryexpr
                                                                                                                    Call:   factor
                                                                                                                      Call:   lvalue
                                                                                                                        Consumed token: <<IDENT>: "variavel2" at line 23 column 36>
                                                                                                                      Return: lvalue
                                                                                                                    Return: factor
                                                                                                                  Return: unaryexpr
                                                                                                                Return: term
                                                                                                              Return: numexpr
                                                                                                            Return: expression
                                                                                                            Consumed token: <";" at line 23 column 45>
                                                                                                            Call:   atribstat
                                                                                                              Call:   lvalue
                                                                                                                Consumed token: <<IDENT>: "cont2" at line 23 column 47>
                                                                                                              Return: lvalue
                                                                                                              Call:   assignment
                                                                                                                Consumed token: <"=" at line 23 column 53>
                                                                                                                Call:   expression
                                                                                                                  Call:   numexpr
                                                                                                                    Call:   term
                                                                                                                      Call:   unaryexpr
                                                                                                                        Call:   factor
                                                                                                                          Consumed token: <"(" at line 23 column 55>
                                                                                                                          Call:   expression
                                                                                                                            Call:   numexpr
                                                                                                                              Call:   term
                                                                                                                                Call:   unaryexpr
                                                                                                                                  Call:   factor
                                                                                                                                    Call:   lvalue
                                                                                                                                      Consumed token: <<IDENT>: "cont2" at line 23 column 56>
                                                                                                                                    Return: lvalue
                                                                                                                                  Return: factor
                                                                                                                                Return: unaryexpr
                                                                                                                              Return: term
                                                                                                                              Consumed token: <"+" at line 23 column 62>
                                                                                                                              Call:   term
                                                                                                                                Call:   unaryexpr
                                                                                                                                  Call:   factor
                                                                                                                                    Consumed token: <<byte_constant>: "1" at line 23 column 64>
                                                                                                                                  Return: factor
                                                                                                                                Return: unaryexpr
                                                                                                                              Return: term
                                                                                                                            Return: numexpr
                                                                                                                          Return: expression
                                                                                                                          Consumed token: <")" at line 23 column 65>
                                                                                                                        Return: factor
                                                                                                                      Return: unaryexpr
                                                                                                                    Return: term
                                                                                                                  Return: numexpr
                                                                                                                Return: expression
                                                                                                              Return: assignment
                                                                                                            Return: atribstat
                                                                                                            Consumed token: <")" at line 23 column 66>
                                                                                                            Call:   statement
                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"byte">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"short">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"int">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"long">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"float">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"double">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"char">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <"string">
                                                                                                                  Visited token: <"{" at line 24 column 13>; Expected token: <<IDENT>>
                                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                              Consumed token: <"{" at line 24 column 13>
                                                                                                              Call:   statlist
                                                                                                                Call:   statement
                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"byte">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"short">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"int">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"long">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"float">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"double">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"char">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <"string">
                                                                                                                      Visited token: <<IDENT>: "variavel4" at line 25 column 17>; Expected token: <<IDENT>>
                                                                                                                    Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                    Visited token: <"=" at line 25 column 27>; Expected token: <<IDENT>>
                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                  Call:   atribstat
                                                                                                                    Call:   lvalue
                                                                                                                      Consumed token: <<IDENT>: "variavel4" at line 25 column 17>
                                                                                                                    Return: lvalue
                                                                                                                    Call:   assignment
                                                                                                                      Consumed token: <"=" at line 25 column 27>
                                                                                                                      Call:   expression
                                                                                                                        Call:   numexpr
                                                                                                                          Call:   term
                                                                                                                            Call:   unaryexpr
                                                                                                                              Call:   factor
                                                                                                                                Consumed token: <<byte_constant>: "2" at line 25 column 29>
                                                                                                                              Return: factor
                                                                                                                            Return: unaryexpr
                                                                                                                          Return: term
                                                                                                                        Return: numexpr
                                                                                                                      Return: expression
                                                                                                                    Return: assignment
                                                                                                                  Return: atribstat
                                                                                                                  Consumed token: <";" at line 25 column 30>
                                                                                                                Return: statement
                                                                                                              Return: statlist
                                                                                                              Consumed token: <"}" at line 26 column 13>
                                                                                                            Return: statement
                                                                                                          Return: forstat
                                                                                                        Return: statement
                                                                                                      Return: statlist
                                                                                                      Consumed token: <"}" at line 27 column 9>
                                                                                                    Return: statement
                                                                                                  Return: forstat
                                                                                                Return: statement
                                                                                              Return: statlist
                                                                                              Consumed token: <"}" at line 28 column 5>
                                                                                            Return: statement
                                                                                          Return: methodbody
                                                                                        Return: methoddecl
                                                                                        Call:   modifs(LOOKING AHEAD...)
                                                                                          Call:   modifvisibility(LOOKING AHEAD...)
                                                                                            Visited token: <"private" at line 30 column 5>; Expected token: <"public">
                                                                                            Visited token: <"private" at line 30 column 5>; Expected token: <"protected">
                                                                                            Visited token: <"private" at line 30 column 5>; Expected token: <"private">
                                                                                          Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                                                                          Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"final">
                                                                                        Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                        Call:   methoddecl(LOOKING AHEAD...)
                                                                                          Call:   types(LOOKING AHEAD...)
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"byte">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"short">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"int">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"long">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"float">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"double">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"char">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <"string">
                                                                                            Visited token: <<IDENT>: "void" at line 30 column 13>; Expected token: <<IDENT>>
                                                                                          Return: types(LOOKAHEAD SUCCEEDED)
                                                                                          Visited token: <<IDENT>: "calcIf" at line 30 column 18>; Expected token: <"[">
                                                                                          Visited token: <<IDENT>: "calcIf" at line 30 column 18>; Expected token: <<IDENT>>
                                                                                          Call:   methodbody(LOOKING AHEAD...)
                                                                                            Visited token: <"(" at line 30 column 24>; Expected token: <"(">
                                                                                            Call:   modifs
                                                                                              Call:   modifvisibility
                                                                                                Consumed token: <"private" at line 30 column 5>
                                                                                              Return: modifvisibility
                                                                                            Return: modifs
                                                                                            Call:   methoddecl
                                                                                              Call:   types
                                                                                                Consumed token: <<IDENT>: "void" at line 30 column 13>
                                                                                              Return: types
                                                                                              Consumed token: <<IDENT>: "calcIf" at line 30 column 18>
                                                                                              Call:   methodbody
                                                                                                Consumed token: <"(" at line 30 column 24>
                                                                                                Call:   paramlist
                                                                                                Return: paramlist
                                                                                                Consumed token: <")" at line 30 column 25>
                                                                                                Call:   statement
                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"byte">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"short">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"int">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"long">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"float">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"double">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"char">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <"string">
                                                                                                      Visited token: <"{" at line 30 column 26>; Expected token: <<IDENT>>
                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                  Consumed token: <"{" at line 30 column 26>
                                                                                                  Call:   statlist
                                                                                                    Call:   statement
                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"byte">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"short">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"int">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"long">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"float">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"double">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"char">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <"string">
                                                                                                          Visited token: <"if" at line 31 column 9>; Expected token: <<IDENT>>
                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                      Call:   ifstat
                                                                                                        Consumed token: <"if" at line 31 column 9>
                                                                                                        Consumed token: <"(" at line 31 column 11>
                                                                                                        Call:   expression
                                                                                                          Call:   numexpr
                                                                                                            Call:   term
                                                                                                              Call:   unaryexpr
                                                                                                                Call:   factor
                                                                                                                  Consumed token: <"(" at line 31 column 12>
                                                                                                                  Call:   expression
                                                                                                                    Call:   numexpr
                                                                                                                      Call:   term
                                                                                                                        Call:   unaryexpr
                                                                                                                          Call:   factor
                                                                                                                            Call:   lvalue
                                                                                                                              Consumed token: <<IDENT>: "variavel1" at line 31 column 13>
                                                                                                                            Return: lvalue
                                                                                                                          Return: factor
                                                                                                                        Return: unaryexpr
                                                                                                                      Return: term
                                                                                                                    Return: numexpr
                                                                                                                    Consumed token: <"!=" at line 31 column 23>
                                                                                                                    Call:   numexpr
                                                                                                                      Call:   term
                                                                                                                        Call:   unaryexpr
                                                                                                                          Call:   factor
                                                                                                                            Consumed token: <<byte_constant>: "10" at line 31 column 26>
                                                                                                                          Return: factor
                                                                                                                        Return: unaryexpr
                                                                                                                      Return: term
                                                                                                                    Return: numexpr
                                                                                                                  Return: expression
                                                                                                                  Consumed token: <")" at line 31 column 28>
                                                                                                                Return: factor
                                                                                                              Return: unaryexpr
                                                                                                            Return: term
                                                                                                          Return: numexpr
                                                                                                          Consumed token: <"&&" at line 31 column 30>
                                                                                                          Call:   numexpr
                                                                                                            Call:   term
                                                                                                              Call:   unaryexpr
                                                                                                                Call:   factor
                                                                                                                  Consumed token: <"(" at line 31 column 33>
                                                                                                                  Call:   expression
                                                                                                                    Call:   numexpr
                                                                                                                      Call:   term
                                                                                                                        Call:   unaryexpr
                                                                                                                          Call:   factor
                                                                                                                            Call:   lvalue
                                                                                                                              Consumed token: <<IDENT>: "variavel2" at line 31 column 34>
                                                                                                                            Return: lvalue
                                                                                                                          Return: factor
                                                                                                                        Return: unaryexpr
                                                                                                                      Return: term
                                                                                                                    Return: numexpr
                                                                                                                    Consumed token: <"==" at line 31 column 44>
                                                                                                                    Call:   numexpr
                                                                                                                      Call:   term
                                                                                                                        Call:   unaryexpr
                                                                                                                          Call:   factor
                                                                                                                            Consumed token: <<byte_constant>: "50" at line 31 column 47>
                                                                                                                          Return: factor
                                                                                                                        Return: unaryexpr
                                                                                                                      Return: term
                                                                                                                    Return: numexpr
                                                                                                                  Return: expression
                                                                                                                  Consumed token: <")" at line 31 column 49>
                                                                                                                Return: factor
                                                                                                              Return: unaryexpr
                                                                                                            Return: term
                                                                                                          Return: numexpr
                                                                                                        Return: expression
                                                                                                        Consumed token: <")" at line 31 column 50>
                                                                                                        Call:   statement
                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"byte">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"short">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"int">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"long">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"float">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"double">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"char">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <"string">
                                                                                                              Visited token: <"{" at line 31 column 51>; Expected token: <<IDENT>>
                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                          Consumed token: <"{" at line 31 column 51>
                                                                                                          Call:   statlist
                                                                                                            Call:   statement
                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                  Visited token: <"int" at line 32 column 13>; Expected token: <"byte">
                                                                                                                  Visited token: <"int" at line 32 column 13>; Expected token: <"short">
                                                                                                                  Visited token: <"int" at line 32 column 13>; Expected token: <"int">
                                                                                                                Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                Visited token: <<IDENT>: "variavel3" at line 32 column 17>; Expected token: <<IDENT>>
                                                                                                                Visited token: <"=" at line 32 column 27>; Expected token: <"[">
                                                                                                                Call:   assignment(LOOKING AHEAD...)
                                                                                                                  Visited token: <"=" at line 32 column 27>; Expected token: <"=">
                                                                                                                  Call:   alocexpression(LOOKING AHEAD...)
                                                                                                                    Visited token: <<byte_constant>: "5" at line 32 column 29>; Expected token: <"new">
                                                                                                                  Return: alocexpression(LOOKAHEAD FAILED)
                                                                                                                  Call:   expression(LOOKING AHEAD...)
                                                                                                                    Call:   numexpr(LOOKING AHEAD...)
                                                                                                                      Call:   term(LOOKING AHEAD...)
                                                                                                                        Call:   unaryexpr(LOOKING AHEAD...)
                                                                                                                          Visited token: <<byte_constant>: "5" at line 32 column 29>; Expected token: <"+">
                                                                                                                          Visited token: <<byte_constant>: "5" at line 32 column 29>; Expected token: <"-">
                                                                                                                          Call:   factor(LOOKING AHEAD...)
                                                                                                                            Visited token: <<byte_constant>: "5" at line 32 column 29>; Expected token: <"!">
                                                                                                                            Visited token: <<byte_constant>: "5" at line 32 column 29>; Expected token: <<char_constant>>
                                                                                                                            Visited token: <<byte_constant>: "5" at line 32 column 29>; Expected token: <<byte_constant>>
                                                                                                                            Call:   vardecl
                                                                                                                              Call:   types
                                                                                                                                Consumed token: <"int" at line 32 column 13>
                                                                                                                              Return: types
                                                                                                                              Consumed token: <<IDENT>: "variavel3" at line 32 column 17>
                                                                                                                              Call:   assignment
                                                                                                                                Consumed token: <"=" at line 32 column 27>
                                                                                                                                Call:   expression
                                                                                                                                  Call:   numexpr
                                                                                                                                    Call:   term
                                                                                                                                      Call:   unaryexpr
                                                                                                                                        Call:   factor
                                                                                                                                          Consumed token: <<byte_constant>: "5" at line 32 column 29>
                                                                                                                                        Return: factor
                                                                                                                                      Return: unaryexpr
                                                                                                                                    Return: term
                                                                                                                                  Return: numexpr
                                                                                                                                Return: expression
                                                                                                                              Return: assignment
                                                                                                                            Return: vardecl
                                                                                                                            Consumed token: <";" at line 32 column 30>
                                                                                                                          Return: statement
                                                                                                                        Return: statlist
                                                                                                                        Consumed token: <"}" at line 33 column 9>
                                                                                                                      Return: statement
                                                                                                                    Return: ifstat
                                                                                                                  Return: statement
                                                                                                                  Call:   statlist
                                                                                                                    Call:   statement
                                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"byte">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"short">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"int">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"long">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"float">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"double">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"char">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <"string">
                                                                                                                          Visited token: <"if" at line 35 column 9>; Expected token: <<IDENT>>
                                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                      Call:   ifstat
                                                                                                                        Consumed token: <"if" at line 35 column 9>
                                                                                                                        Consumed token: <"(" at line 35 column 12>
                                                                                                                        Call:   expression
                                                                                                                          Call:   numexpr
                                                                                                                            Call:   term
                                                                                                                              Call:   unaryexpr
                                                                                                                                Call:   factor
                                                                                                                                  Consumed token: <<bool_constant>: "true" at line 35 column 13>
                                                                                                                                Return: factor
                                                                                                                              Return: unaryexpr
                                                                                                                            Return: term
                                                                                                                          Return: numexpr
                                                                                                                        Return: expression
                                                                                                                        Consumed token: <")" at line 35 column 17>
                                                                                                                        Call:   statement
                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"byte">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"short">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"int">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"long">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"float">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"double">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"char">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <"string">
                                                                                                                              Visited token: <"{" at line 35 column 19>; Expected token: <<IDENT>>
                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                          Consumed token: <"{" at line 35 column 19>
                                                                                                                          Call:   statlist
                                                                                                                            Call:   statement
                                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"byte">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"short">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"int">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"long">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"float">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"double">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"char">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <"string">
                                                                                                                                  Visited token: <"if" at line 36 column 13>; Expected token: <<IDENT>>
                                                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                              Call:   ifstat
                                                                                                                                Consumed token: <"if" at line 36 column 13>
                                                                                                                                Consumed token: <"(" at line 36 column 16>
                                                                                                                                Call:   expression
                                                                                                                                  Call:   numexpr
                                                                                                                                    Call:   term
                                                                                                                                      Call:   unaryexpr
                                                                                                                                        Call:   factor
                                                                                                                                          Consumed token: <"(" at line 36 column 17>
                                                                                                                                          Call:   expression
                                                                                                                                            Call:   numexpr
                                                                                                                                              Call:   term
                                                                                                                                                Call:   unaryexpr
                                                                                                                                                  Call:   factor
                                                                                                                                                    Consumed token: <<byte_constant>: "1" at line 36 column 18>
                                                                                                                                                  Return: factor
                                                                                                                                                Return: unaryexpr
                                                                                                                                              Return: term
                                                                                                                                              Consumed token: <"+" at line 36 column 19>
                                                                                                                                              Call:   term
                                                                                                                                                Call:   unaryexpr
                                                                                                                                                  Call:   factor
                                                                                                                                                    Consumed token: <<byte_constant>: "2" at line 36 column 20>
                                                                                                                                                  Return: factor
                                                                                                                                                Return: unaryexpr
                                                                                                                                              Return: term
                                                                                                                                            Return: numexpr
                                                                                                                                          Return: expression
                                                                                                                                          Consumed token: <")" at line 36 column 21>
                                                                                                                                        Return: factor
                                                                                                                                      Return: unaryexpr
                                                                                                                                    Return: term
                                                                                                                                  Return: numexpr
                                                                                                                                  Consumed token: <">" at line 36 column 23>
                                                                                                                                  Call:   numexpr
                                                                                                                                    Call:   term
                                                                                                                                      Call:   unaryexpr
                                                                                                                                        Call:   factor
                                                                                                                                          Consumed token: <<byte_constant>: "4" at line 36 column 25>
                                                                                                                                        Return: factor
                                                                                                                                      Return: unaryexpr
                                                                                                                                    Return: term
                                                                                                                                  Return: numexpr
                                                                                                                                Return: expression
                                                                                                                                Consumed token: <")" at line 36 column 26>
                                                                                                                                Call:   statement
                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"byte">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"short">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"int">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"long">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"float">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"double">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"char">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <"string">
                                                                                                                                      Visited token: <"{" at line 36 column 28>; Expected token: <<IDENT>>
                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                  Consumed token: <"{" at line 36 column 28>
                                                                                                                                  Call:   statlist
                                                                                                                                    Call:   statement
                                                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"byte">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"short">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"int">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"long">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"float">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"double">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"char">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <"string">
                                                                                                                                          Visited token: <"print" at line 37 column 17>; Expected token: <<IDENT>>
                                                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                      Call:   printstat
                                                                                                                                        Consumed token: <"print" at line 37 column 17>
                                                                                                                                        Call:   expression
                                                                                                                                          Call:   numexpr
                                                                                                                                            Call:   term
                                                                                                                                              Call:   unaryexpr
                                                                                                                                                Call:   factor
                                                                                                                                                  Consumed token: <"(" at line 37 column 22>
                                                                                                                                                  Call:   expression
                                                                                                                                                    Call:   numexpr
                                                                                                                                                      Call:   term
                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                          Call:   factor
                                                                                                                                                            Consumed token: <<string_constant>: ""1+2 é maior que 4"" at line 37 column 23>
                                                                                                                                                          Return: factor
                                                                                                                                                        Return: unaryexpr
                                                                                                                                                      Return: term
                                                                                                                                                    Return: numexpr
                                                                                                                                                  Return: expression
                                                                                                                                                  Consumed token: <")" at line 37 column 42>
                                                                                                                                                Return: factor
                                                                                                                                              Return: unaryexpr
                                                                                                                                            Return: term
                                                                                                                                          Return: numexpr
                                                                                                                                        Return: expression
                                                                                                                                      Return: printstat
                                                                                                                                      Consumed token: <";" at line 37 column 43>
                                                                                                                                    Return: statement
                                                                                                                                  Return: statlist
                                                                                                                                  Consumed token: <"}" at line 38 column 13>
                                                                                                                                Return: statement
                                                                                                                                Consumed token: <"else" at line 38 column 15>
                                                                                                                                Call:   statement
                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"byte">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"short">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"int">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"long">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"float">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"double">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"char">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <"string">
                                                                                                                                      Visited token: <"{" at line 38 column 20>; Expected token: <<IDENT>>
                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                  Consumed token: <"{" at line 38 column 20>
                                                                                                                                  Call:   statlist
                                                                                                                                    Call:   statement
                                                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"byte">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"short">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"int">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"long">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"float">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"double">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"char">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <"string">
                                                                                                                                          Visited token: <"print" at line 39 column 17>; Expected token: <<IDENT>>
                                                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                      Call:   printstat
                                                                                                                                        Consumed token: <"print" at line 39 column 17>
                                                                                                                                        Call:   expression
                                                                                                                                          Call:   numexpr
                                                                                                                                            Call:   term
                                                                                                                                              Call:   unaryexpr
                                                                                                                                                Call:   factor
                                                                                                                                                  Consumed token: <"(" at line 39 column 22>
                                                                                                                                                  Call:   expression
                                                                                                                                                    Call:   numexpr
                                                                                                                                                      Call:   term
                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                          Call:   factor
                                                                                                                                                            Consumed token: <<string_constant>: ""1+2 NÃO é maior que 4"" at line 39 column 23>
                                                                                                                                                          Return: factor
                                                                                                                                                        Return: unaryexpr
                                                                                                                                                      Return: term
                                                                                                                                                    Return: numexpr
                                                                                                                                                  Return: expression
                                                                                                                                                  Consumed token: <")" at line 39 column 46>
                                                                                                                                                Return: factor
                                                                                                                                              Return: unaryexpr
                                                                                                                                            Return: term
                                                                                                                                          Return: numexpr
                                                                                                                                        Return: expression
                                                                                                                                      Return: printstat
                                                                                                                                      Consumed token: <";" at line 39 column 47>
                                                                                                                                    Return: statement
                                                                                                                                  Return: statlist
                                                                                                                                  Consumed token: <"}" at line 40 column 13>
                                                                                                                                Return: statement
                                                                                                                              Return: ifstat
                                                                                                                            Return: statement
                                                                                                                          Return: statlist
                                                                                                                          Consumed token: <"}" at line 41 column 9>
                                                                                                                        Return: statement
                                                                                                                        Consumed token: <"else" at line 41 column 11>
                                                                                                                        Call:   statement
                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"byte">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"short">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"int">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"long">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"float">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"double">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"char">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <"string">
                                                                                                                              Visited token: <"{" at line 41 column 16>; Expected token: <<IDENT>>
                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                          Consumed token: <"{" at line 41 column 16>
                                                                                                                          Call:   statlist
                                                                                                                            Call:   statement
                                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"byte">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"short">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"int">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"long">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"float">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"double">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"char">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <"string">
                                                                                                                                  Visited token: <"print" at line 42 column 17>; Expected token: <<IDENT>>
                                                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                              Call:   printstat
                                                                                                                                Consumed token: <"print" at line 42 column 17>
                                                                                                                                Call:   expression
                                                                                                                                  Call:   numexpr
                                                                                                                                    Call:   term
                                                                                                                                      Call:   unaryexpr
                                                                                                                                        Call:   factor
                                                                                                                                          Consumed token: <"(" at line 42 column 22>
                                                                                                                                          Call:   expression
                                                                                                                                            Call:   numexpr
                                                                                                                                              Call:   term
                                                                                                                                                Call:   unaryexpr
                                                                                                                                                  Call:   factor
                                                                                                                                                    Consumed token: <<string_constant>: ""Não verdadeiro!"" at line 42 column 23>
                                                                                                                                                  Return: factor
                                                                                                                                                Return: unaryexpr
                                                                                                                                              Return: term
                                                                                                                                            Return: numexpr
                                                                                                                                          Return: expression
                                                                                                                                          Consumed token: <")" at line 42 column 40>
                                                                                                                                        Return: factor
                                                                                                                                      Return: unaryexpr
                                                                                                                                    Return: term
                                                                                                                                  Return: numexpr
                                                                                                                                Return: expression
                                                                                                                              Return: printstat
                                                                                                                              Consumed token: <";" at line 42 column 41>
                                                                                                                            Return: statement
                                                                                                                          Return: statlist
                                                                                                                          Consumed token: <"}" at line 43 column 9>
                                                                                                                        Return: statement
                                                                                                                      Return: ifstat
                                                                                                                    Return: statement
                                                                                                                  Return: statlist
                                                                                                                Return: statlist
                                                                                                                Consumed token: <"}" at line 44 column 5>
                                                                                                              Return: statement
                                                                                                            Return: methodbody
                                                                                                          Return: methoddecl
                                                                                                          Call:   modifs(LOOKING AHEAD...)
                                                                                                            Call:   modifvisibility(LOOKING AHEAD...)
                                                                                                              Visited token: <"protected" at line 46 column 5>; Expected token: <"public">
                                                                                                              Visited token: <"protected" at line 46 column 5>; Expected token: <"protected">
                                                                                                            Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                                                                                            Visited token: <"final" at line 46 column 15>; Expected token: <"final">
                                                                                                          Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                                          Call:   methoddecl(LOOKING AHEAD...)
                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"byte">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"short">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"int">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"long">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"float">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"double">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"char">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <"string">
                                                                                                              Visited token: <<IDENT>: "void" at line 46 column 21>; Expected token: <<IDENT>>
                                                                                                            Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                            Visited token: <<IDENT>: "calcDoWhile" at line 46 column 26>; Expected token: <"[">
                                                                                                            Visited token: <<IDENT>: "calcDoWhile" at line 46 column 26>; Expected token: <<IDENT>>
                                                                                                            Call:   modifs
                                                                                                              Call:   modifvisibility
                                                                                                                Consumed token: <"protected" at line 46 column 5>
                                                                                                              Return: modifvisibility
                                                                                                              Consumed token: <"final" at line 46 column 15>
                                                                                                            Return: modifs
                                                                                                            Call:   methoddecl
                                                                                                              Call:   types
                                                                                                                Consumed token: <<IDENT>: "void" at line 46 column 21>
                                                                                                              Return: types
                                                                                                              Consumed token: <<IDENT>: "calcDoWhile" at line 46 column 26>
                                                                                                              Call:   methodbody
                                                                                                                Consumed token: <"(" at line 46 column 37>
                                                                                                                Call:   paramlist
                                                                                                                Return: paramlist
                                                                                                                Consumed token: <")" at line 46 column 38>
                                                                                                                Call:   statement
                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"byte">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"short">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"int">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"long">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"float">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"double">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"char">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <"string">
                                                                                                                      Visited token: <"{" at line 46 column 39>; Expected token: <<IDENT>>
                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                  Consumed token: <"{" at line 46 column 39>
                                                                                                                  Call:   statlist
                                                                                                                    Call:   statement
                                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"byte">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"short">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"int">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"long">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"float">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"double">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"char">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <"string">
                                                                                                                          Visited token: <"do" at line 47 column 9>; Expected token: <<IDENT>>
                                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                      Call:   dowhilestat
                                                                                                                        Consumed token: <"do" at line 47 column 9>
                                                                                                                        Call:   statement
                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"byte">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"short">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"int">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"long">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"float">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"double">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"char">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <"string">
                                                                                                                              Visited token: <<IDENT>: "genero" at line 48 column 13>; Expected token: <<IDENT>>
                                                                                                                            Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                            Visited token: <"=" at line 48 column 20>; Expected token: <<IDENT>>
                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                          Call:   atribstat
                                                                                                                            Call:   lvalue
                                                                                                                              Consumed token: <<IDENT>: "genero" at line 48 column 13>
                                                                                                                            Return: lvalue
                                                                                                                            Call:   assignment
                                                                                                                              Consumed token: <"=" at line 48 column 20>
                                                                                                                              Call:   expression
                                                                                                                                Call:   numexpr
                                                                                                                                  Call:   term
                                                                                                                                    Call:   unaryexpr
                                                                                                                                      Call:   factor
                                                                                                                                        Consumed token: <<string_constant>: ""mulher"" at line 48 column 22>
                                                                                                                                      Return: factor
                                                                                                                                    Return: unaryexpr
                                                                                                                                  Return: term
                                                                                                                                Return: numexpr
                                                                                                                              Return: expression
                                                                                                                            Return: assignment
                                                                                                                          Return: atribstat
                                                                                                                          Consumed token: <";" at line 48 column 30>
                                                                                                                        Return: statement
                                                                                                                        Consumed token: <"(" at line 49 column 9>
                                                                                                                        Call:   expression
                                                                                                                          Call:   numexpr
                                                                                                                            Call:   term
                                                                                                                              Call:   unaryexpr
                                                                                                                                Call:   factor
                                                                                                                                  Call:   lvalue
                                                                                                                                    Consumed token: <<IDENT>: "idade" at line 49 column 10>
                                                                                                                                  Return: lvalue
                                                                                                                                Return: factor
                                                                                                                              Return: unaryexpr
                                                                                                                            Return: term
                                                                                                                          Return: numexpr
                                                                                                                          Consumed token: <"<" at line 49 column 15>
                                                                                                                          Call:   numexpr
                                                                                                                            Call:   term
                                                                                                                              Call:   unaryexpr
                                                                                                                                Call:   factor
                                                                                                                                  Consumed token: <<byte_constant>: "50" at line 49 column 16>
                                                                                                                                Return: factor
                                                                                                                              Return: unaryexpr
                                                                                                                            Return: term
                                                                                                                          Return: numexpr
                                                                                                                        Return: expression
                                                                                                                        Consumed token: <")" at line 49 column 18>
                                                                                                                        Consumed token: <";" at line 49 column 19>
                                                                                                                      Return: dowhilestat
                                                                                                                    Return: statement
                                                                                                                  Return: statlist
                                                                                                                  Consumed token: <"}" at line 50 column 5>
                                                                                                                Return: statement
                                                                                                              Return: methodbody
                                                                                                            Return: methoddecl
                                                                                                            Call:   modifs(LOOKING AHEAD...)
                                                                                                              Call:   modifvisibility(LOOKING AHEAD...)
                                                                                                                Visited token: <"public" at line 52 column 5>; Expected token: <"public">
                                                                                                              Return: modifvisibility(LOOKAHEAD SUCCEEDED)
                                                                                                              Visited token: <"int" at line 52 column 12>; Expected token: <"final">
                                                                                                            Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                                            Call:   methoddecl(LOOKING AHEAD...)
                                                                                                              Call:   types(LOOKING AHEAD...)
                                                                                                                Visited token: <"int" at line 52 column 12>; Expected token: <"byte">
                                                                                                                Visited token: <"int" at line 52 column 12>; Expected token: <"short">
                                                                                                                Visited token: <"int" at line 52 column 12>; Expected token: <"int">
                                                                                                              Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                              Visited token: <<IDENT>: "CalcWhile" at line 52 column 16>; Expected token: <"[">
                                                                                                              Visited token: <<IDENT>: "CalcWhile" at line 52 column 16>; Expected token: <<IDENT>>
                                                                                                              Call:   methodbody(LOOKING AHEAD...)
                                                                                                                Visited token: <"(" at line 52 column 25>; Expected token: <"(">
                                                                                                                Call:   modifs
                                                                                                                  Call:   modifvisibility
                                                                                                                    Consumed token: <"public" at line 52 column 5>
                                                                                                                  Return: modifvisibility
                                                                                                                Return: modifs
                                                                                                                Call:   methoddecl
                                                                                                                  Call:   types
                                                                                                                    Consumed token: <"int" at line 52 column 12>
                                                                                                                  Return: types
                                                                                                                  Consumed token: <<IDENT>: "CalcWhile" at line 52 column 16>
                                                                                                                  Call:   methodbody
                                                                                                                    Consumed token: <"(" at line 52 column 25>
                                                                                                                    Call:   paramlist
                                                                                                                    Return: paramlist
                                                                                                                    Consumed token: <")" at line 52 column 26>
                                                                                                                    Call:   statement
                                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"byte">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"short">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"int">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"long">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"float">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"double">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"char">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <"string">
                                                                                                                          Visited token: <"{" at line 52 column 27>; Expected token: <<IDENT>>
                                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                      Consumed token: <"{" at line 52 column 27>
                                                                                                                      Call:   statlist
                                                                                                                        Call:   statement
                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"byte">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"short">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"int">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"long">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"float">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"double">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"char">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <"string">
                                                                                                                              Visited token: <"while" at line 53 column 9>; Expected token: <<IDENT>>
                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                          Call:   whilestat
                                                                                                                            Consumed token: <"while" at line 53 column 9>
                                                                                                                            Consumed token: <"(" at line 53 column 15>
                                                                                                                            Call:   expression
                                                                                                                              Call:   numexpr
                                                                                                                                Call:   term
                                                                                                                                  Call:   unaryexpr
                                                                                                                                    Call:   factor
                                                                                                                                      Call:   lvalue
                                                                                                                                        Consumed token: <<IDENT>: "idade" at line 53 column 16>
                                                                                                                                      Return: lvalue
                                                                                                                                    Return: factor
                                                                                                                                  Return: unaryexpr
                                                                                                                                Return: term
                                                                                                                              Return: numexpr
                                                                                                                              Consumed token: <"!=" at line 53 column 22>
                                                                                                                              Call:   numexpr
                                                                                                                                Call:   term
                                                                                                                                  Call:   unaryexpr
                                                                                                                                    Call:   factor
                                                                                                                                      Consumed token: <<byte_constant>: "50" at line 53 column 25>
                                                                                                                                    Return: factor
                                                                                                                                  Return: unaryexpr
                                                                                                                                Return: term
                                                                                                                              Return: numexpr
                                                                                                                            Return: expression
                                                                                                                            Consumed token: <")" at line 53 column 27>
                                                                                                                            Call:   statement
                                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"byte">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"short">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"int">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"long">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"float">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"double">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"char">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <"string">
                                                                                                                                  Visited token: <<IDENT>: "genero" at line 54 column 13>; Expected token: <<IDENT>>
                                                                                                                                Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                                Visited token: <"=" at line 54 column 20>; Expected token: <<IDENT>>
                                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                              Call:   atribstat
                                                                                                                                Call:   lvalue
                                                                                                                                  Consumed token: <<IDENT>: "genero" at line 54 column 13>
                                                                                                                                Return: lvalue
                                                                                                                                Call:   assignment
                                                                                                                                  Consumed token: <"=" at line 54 column 20>
                                                                                                                                  Call:   expression
                                                                                                                                    Call:   numexpr
                                                                                                                                      Call:   term
                                                                                                                                        Call:   unaryexpr
                                                                                                                                          Call:   factor
                                                                                                                                            Consumed token: <<string_constant>: ""homem"" at line 54 column 22>
                                                                                                                                          Return: factor
                                                                                                                                        Return: unaryexpr
                                                                                                                                      Return: term
                                                                                                                                    Return: numexpr
                                                                                                                                  Return: expression
                                                                                                                                Return: assignment
                                                                                                                              Return: atribstat
                                                                                                                              Consumed token: <";" at line 54 column 29>
                                                                                                                            Return: statement
                                                                                                                          Return: whilestat
                                                                                                                        Return: statement
                                                                                                                      Return: statlist
                                                                                                                      Consumed token: <"}" at line 55 column 5>
                                                                                                                    Return: statement
                                                                                                                  Return: methodbody
                                                                                                                Return: methoddecl
                                                                                                                Call:   modifs(LOOKING AHEAD...)
                                                                                                                  Call:   modifvisibility(LOOKING AHEAD...)
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"public">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"protected">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"private">
                                                                                                                  Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                                                  Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"final">
                                                                                                                Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                                                Call:   methoddecl(LOOKING AHEAD...)
                                                                                                                  Call:   types(LOOKING AHEAD...)
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"byte">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"short">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"int">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"long">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"float">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"double">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"char">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <"string">
                                                                                                                    Visited token: <<IDENT>: "void" at line 57 column 5>; Expected token: <<IDENT>>
                                                                                                                  Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                  Visited token: <<IDENT>: "calcSwitchCase" at line 57 column 10>; Expected token: <"[">
                                                                                                                  Visited token: <<IDENT>: "calcSwitchCase" at line 57 column 10>; Expected token: <<IDENT>>
                                                                                                                  Call:   methodbody(LOOKING AHEAD...)
                                                                                                                    Visited token: <"(" at line 57 column 24>; Expected token: <"(">
                                                                                                                    Call:   paramlist(LOOKING AHEAD...)
                                                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"byte">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"short">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"int">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"long">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"float">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"double">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"char">
                                                                                                                        Visited token: <"string" at line 57 column 25>; Expected token: <"string">
                                                                                                                        Call:   modifs
                                                                                                                        Return: modifs
                                                                                                                        Call:   methoddecl
                                                                                                                          Call:   types
                                                                                                                            Consumed token: <<IDENT>: "void" at line 57 column 5>
                                                                                                                          Return: types
                                                                                                                          Consumed token: <<IDENT>: "calcSwitchCase" at line 57 column 10>
                                                                                                                          Call:   methodbody
                                                                                                                            Consumed token: <"(" at line 57 column 24>
                                                                                                                            Call:   paramlist
                                                                                                                              Call:   types
                                                                                                                                Consumed token: <"string" at line 57 column 25>
                                                                                                                              Return: types
                                                                                                                              Consumed token: <<IDENT>: "abc" at line 57 column 32>
                                                                                                                            Return: paramlist
                                                                                                                            Consumed token: <")" at line 57 column 35>
                                                                                                                            Call:   statement
                                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"byte">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"short">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"int">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"long">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"float">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"double">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"char">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <"string">
                                                                                                                                  Visited token: <"{" at line 57 column 36>; Expected token: <<IDENT>>
                                                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                              Consumed token: <"{" at line 57 column 36>
                                                                                                                              Call:   statlist
                                                                                                                                Call:   statement
                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"byte">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"short">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"int">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"long">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"float">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"double">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"char">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <"string">
                                                                                                                                      Visited token: <"switch" at line 58 column 9>; Expected token: <<IDENT>>
                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                  Call:   switchstat
                                                                                                                                    Consumed token: <"switch" at line 58 column 9>
                                                                                                                                    Consumed token: <"(" at line 58 column 15>
                                                                                                                                    Consumed token: <<IDENT>: "abc" at line 58 column 16>
                                                                                                                                    Consumed token: <")" at line 58 column 19>
                                                                                                                                    Consumed token: <"{" at line 58 column 20>
                                                                                                                                    Call:   switchcasesstat
                                                                                                                                      Call:   switchcasestat
                                                                                                                                        Consumed token: <"case" at line 59 column 13>
                                                                                                                                        Call:   factor
                                                                                                                                          Consumed token: <<string_constant>: ""abc"" at line 59 column 18>
                                                                                                                                        Return: factor
                                                                                                                                        Consumed token: <":" at line 59 column 23>
                                                                                                                                        Call:   statement
                                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"byte">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"short">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"int">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"long">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"float">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"double">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"char">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <"string">
                                                                                                                                              Visited token: <"print" at line 60 column 17>; Expected token: <<IDENT>>
                                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                          Call:   printstat
                                                                                                                                            Consumed token: <"print" at line 60 column 17>
                                                                                                                                            Call:   expression
                                                                                                                                              Call:   numexpr
                                                                                                                                                Call:   term
                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                    Call:   factor
                                                                                                                                                      Consumed token: <"(" at line 60 column 22>
                                                                                                                                                      Call:   expression
                                                                                                                                                        Call:   numexpr
                                                                                                                                                          Call:   term
                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                              Call:   factor
                                                                                                                                                                Consumed token: <<string_constant>: ""Ordem lexixografica"" at line 60 column 23>
                                                                                                                                                              Return: factor
                                                                                                                                                            Return: unaryexpr
                                                                                                                                                          Return: term
                                                                                                                                                        Return: numexpr
                                                                                                                                                      Return: expression
                                                                                                                                                      Consumed token: <")" at line 60 column 44>
                                                                                                                                                    Return: factor
                                                                                                                                                  Return: unaryexpr
                                                                                                                                                Return: term
                                                                                                                                              Return: numexpr
                                                                                                                                            Return: expression
                                                                                                                                          Return: printstat
                                                                                                                                          Consumed token: <";" at line 60 column 45>
                                                                                                                                        Return: statement
                                                                                                                                      Return: switchcasestat
                                                                                                                                      Call:   switchcasesstat
                                                                                                                                        Call:   switchcasestat
                                                                                                                                          Consumed token: <"case" at line 61 column 13>
                                                                                                                                          Call:   factor
                                                                                                                                            Consumed token: <<string_constant>: ""123"" at line 61 column 18>
                                                                                                                                          Return: factor
                                                                                                                                          Consumed token: <":" at line 61 column 23>
                                                                                                                                          Call:   statement
                                                                                                                                            Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                              Call:   types(LOOKING AHEAD...)
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"byte">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"short">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"int">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"long">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"float">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"double">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"char">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <"string">
                                                                                                                                                Visited token: <"print" at line 62 column 17>; Expected token: <<IDENT>>
                                                                                                                                              Return: types(LOOKAHEAD FAILED)
                                                                                                                                            Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                            Call:   printstat
                                                                                                                                              Consumed token: <"print" at line 62 column 17>
                                                                                                                                              Call:   expression
                                                                                                                                                Call:   numexpr
                                                                                                                                                  Call:   term
                                                                                                                                                    Call:   unaryexpr
                                                                                                                                                      Call:   factor
                                                                                                                                                        Consumed token: <"(" at line 62 column 22>
                                                                                                                                                        Call:   expression
                                                                                                                                                          Call:   numexpr
                                                                                                                                                            Call:   term
                                                                                                                                                              Call:   unaryexpr
                                                                                                                                                                Call:   factor
                                                                                                                                                                  Consumed token: <<string_constant>: ""Ordem crescente"" at line 62 column 23>
                                                                                                                                                                Return: factor
                                                                                                                                                              Return: unaryexpr
                                                                                                                                                            Return: term
                                                                                                                                                          Return: numexpr
                                                                                                                                                        Return: expression
                                                                                                                                                        Consumed token: <")" at line 62 column 40>
                                                                                                                                                      Return: factor
                                                                                                                                                    Return: unaryexpr
                                                                                                                                                  Return: term
                                                                                                                                                Return: numexpr
                                                                                                                                              Return: expression
                                                                                                                                            Return: printstat
                                                                                                                                            Consumed token: <";" at line 62 column 41>
                                                                                                                                          Return: statement
                                                                                                                                        Return: switchcasestat
                                                                                                                                        Call:   switchcasesstat
                                                                                                                                          Call:   switchcasestat
                                                                                                                                            Consumed token: <"default" at line 63 column 13>
                                                                                                                                            Consumed token: <":" at line 63 column 20>
                                                                                                                                            Call:   statement
                                                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"byte">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"short">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"int">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"long">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"float">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"double">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"char">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <"string">
                                                                                                                                                  Visited token: <"print" at line 64 column 17>; Expected token: <<IDENT>>
                                                                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                              Call:   printstat
                                                                                                                                                Consumed token: <"print" at line 64 column 17>
                                                                                                                                                Call:   expression
                                                                                                                                                  Call:   numexpr
                                                                                                                                                    Call:   term
                                                                                                                                                      Call:   unaryexpr
                                                                                                                                                        Call:   factor
                                                                                                                                                          Consumed token: <"(" at line 64 column 22>
                                                                                                                                                          Call:   expression
                                                                                                                                                            Call:   numexpr
                                                                                                                                                              Call:   term
                                                                                                                                                                Call:   unaryexpr
                                                                                                                                                                  Call:   factor
                                                                                                                                                                    Consumed token: <<string_constant>: ""Outra ordem"" at line 64 column 23>
                                                                                                                                                                  Return: factor
                                                                                                                                                                Return: unaryexpr
                                                                                                                                                              Return: term
                                                                                                                                                            Return: numexpr
                                                                                                                                                          Return: expression
                                                                                                                                                          Consumed token: <")" at line 64 column 36>
                                                                                                                                                        Return: factor
                                                                                                                                                      Return: unaryexpr
                                                                                                                                                    Return: term
                                                                                                                                                  Return: numexpr
                                                                                                                                                Return: expression
                                                                                                                                              Return: printstat
                                                                                                                                              Consumed token: <";" at line 64 column 37>
                                                                                                                                            Return: statement
                                                                                                                                          Return: switchcasestat
                                                                                                                                        Return: switchcasesstat
                                                                                                                                      Return: switchcasesstat
                                                                                                                                    Return: switchcasesstat
                                                                                                                                    Consumed token: <"}" at line 65 column 9>
                                                                                                                                  Return: switchstat
                                                                                                                                Return: statement
                                                                                                                              Return: statlist
                                                                                                                              Consumed token: <"}" at line 66 column 5>
                                                                                                                            Return: statement
                                                                                                                          Return: methodbody
                                                                                                                        Return: methoddecl
                                                                                                                        Call:   modifs(LOOKING AHEAD...)
                                                                                                                          Call:   modifvisibility(LOOKING AHEAD...)
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"public">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"protected">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"private">
                                                                                                                          Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                                                          Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"final">
                                                                                                                        Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                                                        Call:   methoddecl(LOOKING AHEAD...)
                                                                                                                          Call:   types(LOOKING AHEAD...)
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"byte">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"short">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"int">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"long">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"float">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"double">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"char">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <"string">
                                                                                                                            Visited token: <<IDENT>: "void" at line 68 column 5>; Expected token: <<IDENT>>
                                                                                                                          Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                          Visited token: <<IDENT>: "operadores" at line 68 column 10>; Expected token: <"[">
                                                                                                                          Visited token: <<IDENT>: "operadores" at line 68 column 10>; Expected token: <<IDENT>>
                                                                                                                          Call:   methodbody(LOOKING AHEAD...)
                                                                                                                            Visited token: <"(" at line 68 column 20>; Expected token: <"(">
                                                                                                                            Call:   paramlist(LOOKING AHEAD...)
                                                                                                                              Call:   types(LOOKING AHEAD...)
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"byte">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"short">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"int">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"long">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"float">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"double">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"char">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <"string">
                                                                                                                                Visited token: <")" at line 68 column 21>; Expected token: <<IDENT>>
                                                                                                                              Return: types(LOOKAHEAD FAILED)
                                                                                                                            Return: paramlist(LOOKAHEAD SUCCEEDED)
                                                                                                                            Visited token: <")" at line 68 column 21>; Expected token: <")">
                                                                                                                            Call:   modifs
                                                                                                                            Return: modifs
                                                                                                                            Call:   methoddecl
                                                                                                                              Call:   types
                                                                                                                                Consumed token: <<IDENT>: "void" at line 68 column 5>
                                                                                                                              Return: types
                                                                                                                              Consumed token: <<IDENT>: "operadores" at line 68 column 10>
                                                                                                                              Call:   methodbody
                                                                                                                                Consumed token: <"(" at line 68 column 20>
                                                                                                                                Call:   paramlist
                                                                                                                                Return: paramlist
                                                                                                                                Consumed token: <")" at line 68 column 21>
                                                                                                                                Call:   statement
                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"byte">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"short">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"int">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"long">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"float">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"double">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"char">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <"string">
                                                                                                                                      Visited token: <"{" at line 68 column 22>; Expected token: <<IDENT>>
                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                  Consumed token: <"{" at line 68 column 22>
                                                                                                                                  Call:   statlist
                                                                                                                                    Call:   statement
                                                                                                                                      Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                        Call:   types(LOOKING AHEAD...)
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"byte">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"short">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"int">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"long">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"float">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"double">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"char">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <"string">
                                                                                                                                          Visited token: <"if" at line 69 column 9>; Expected token: <<IDENT>>
                                                                                                                                        Return: types(LOOKAHEAD FAILED)
                                                                                                                                      Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                      Call:   ifstat
                                                                                                                                        Consumed token: <"if" at line 69 column 9>
                                                                                                                                        Consumed token: <"(" at line 69 column 11>
                                                                                                                                        Call:   expression
                                                                                                                                          Call:   numexpr
                                                                                                                                            Call:   term
                                                                                                                                              Call:   unaryexpr
                                                                                                                                                Call:   factor
                                                                                                                                                  Consumed token: <"(" at line 69 column 12>
                                                                                                                                                  Call:   expression
                                                                                                                                                    Call:   numexpr
                                                                                                                                                      Call:   term
                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                          Call:   factor
                                                                                                                                                            Call:   lvalue
                                                                                                                                                              Consumed token: <<IDENT>: "genero" at line 69 column 13>
                                                                                                                                                            Return: lvalue
                                                                                                                                                          Return: factor
                                                                                                                                                        Return: unaryexpr
                                                                                                                                                      Return: term
                                                                                                                                                    Return: numexpr
                                                                                                                                                    Consumed token: <"==" at line 69 column 20>
                                                                                                                                                    Call:   numexpr
                                                                                                                                                      Call:   term
                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                          Call:   factor
                                                                                                                                                            Consumed token: <<string_constant>: ""homem"" at line 69 column 23>
                                                                                                                                                          Return: factor
                                                                                                                                                        Return: unaryexpr
                                                                                                                                                      Return: term
                                                                                                                                                    Return: numexpr
                                                                                                                                                  Return: expression
                                                                                                                                                  Consumed token: <")" at line 69 column 30>
                                                                                                                                                Return: factor
                                                                                                                                              Return: unaryexpr
                                                                                                                                            Return: term
                                                                                                                                          Return: numexpr
                                                                                                                                          Consumed token: <"||" at line 69 column 32>
                                                                                                                                          Call:   numexpr
                                                                                                                                            Call:   term
                                                                                                                                              Call:   unaryexpr
                                                                                                                                                Call:   factor
                                                                                                                                                  Consumed token: <"(" at line 69 column 35>
                                                                                                                                                  Call:   expression
                                                                                                                                                    Call:   numexpr
                                                                                                                                                      Call:   term
                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                          Call:   factor
                                                                                                                                                            Call:   lvalue
                                                                                                                                                              Consumed token: <<IDENT>: "genero" at line 69 column 36>
                                                                                                                                                            Return: lvalue
                                                                                                                                                          Return: factor
                                                                                                                                                        Return: unaryexpr
                                                                                                                                                      Return: term
                                                                                                                                                    Return: numexpr
                                                                                                                                                    Consumed token: <"==" at line 69 column 43>
                                                                                                                                                    Call:   numexpr
                                                                                                                                                      Call:   term
                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                          Call:   factor
                                                                                                                                                            Consumed token: <<string_constant>: ""mulher"" at line 69 column 45>
                                                                                                                                                          Return: factor
                                                                                                                                                        Return: unaryexpr
                                                                                                                                                      Return: term
                                                                                                                                                    Return: numexpr
                                                                                                                                                  Return: expression
                                                                                                                                                  Consumed token: <")" at line 69 column 53>
                                                                                                                                                Return: factor
                                                                                                                                              Return: unaryexpr
                                                                                                                                            Return: term
                                                                                                                                          Return: numexpr
                                                                                                                                        Return: expression
                                                                                                                                        Consumed token: <")" at line 69 column 54>
                                                                                                                                        Call:   statement
                                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"byte">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"short">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"int">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"long">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"float">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"double">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"char">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <"string">
                                                                                                                                              Visited token: <"print" at line 70 column 13>; Expected token: <<IDENT>>
                                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                          Call:   printstat
                                                                                                                                            Consumed token: <"print" at line 70 column 13>
                                                                                                                                            Call:   expression
                                                                                                                                              Call:   numexpr
                                                                                                                                                Call:   term
                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                    Call:   factor
                                                                                                                                                      Consumed token: <"(" at line 70 column 18>
                                                                                                                                                      Call:   expression
                                                                                                                                                        Call:   numexpr
                                                                                                                                                          Call:   term
                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                              Call:   factor
                                                                                                                                                                Consumed token: <<string_constant>: ""Dois generos"" at line 70 column 19>
                                                                                                                                                              Return: factor
                                                                                                                                                            Return: unaryexpr
                                                                                                                                                          Return: term
                                                                                                                                                        Return: numexpr
                                                                                                                                                      Return: expression
                                                                                                                                                      Consumed token: <")" at line 70 column 33>
                                                                                                                                                    Return: factor
                                                                                                                                                  Return: unaryexpr
                                                                                                                                                Return: term
                                                                                                                                              Return: numexpr
                                                                                                                                            Return: expression
                                                                                                                                          Return: printstat
                                                                                                                                          Consumed token: <";" at line 70 column 34>
                                                                                                                                        Return: statement
                                                                                                                                        Consumed token: <"else" at line 71 column 9>
                                                                                                                                        Call:   statement
                                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"byte">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"short">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"int">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"long">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"float">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"double">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"char">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <"string">
                                                                                                                                              Visited token: <"print" at line 72 column 13>; Expected token: <<IDENT>>
                                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                          Call:   printstat
                                                                                                                                            Consumed token: <"print" at line 72 column 13>
                                                                                                                                            Call:   expression
                                                                                                                                              Call:   numexpr
                                                                                                                                                Call:   term
                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                    Call:   factor
                                                                                                                                                      Consumed token: <"(" at line 72 column 18>
                                                                                                                                                      Call:   expression
                                                                                                                                                        Call:   numexpr
                                                                                                                                                          Call:   term
                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                              Call:   factor
                                                                                                                                                                Consumed token: <<string_constant>: ""Outros"" at line 72 column 19>
                                                                                                                                                              Return: factor
                                                                                                                                                            Return: unaryexpr
                                                                                                                                                          Return: term
                                                                                                                                                        Return: numexpr
                                                                                                                                                      Return: expression
                                                                                                                                                      Consumed token: <")" at line 72 column 27>
                                                                                                                                                    Return: factor
                                                                                                                                                  Return: unaryexpr
                                                                                                                                                Return: term
                                                                                                                                              Return: numexpr
                                                                                                                                            Return: expression
                                                                                                                                          Return: printstat
                                                                                                                                          Consumed token: <";" at line 72 column 28>
                                                                                                                                        Return: statement
                                                                                                                                      Return: ifstat
                                                                                                                                    Return: statement
                                                                                                                                    Call:   statlist
                                                                                                                                      Call:   statement
                                                                                                                                        Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                          Call:   types(LOOKING AHEAD...)
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"byte">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"short">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"int">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"long">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"float">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"double">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"char">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <"string">
                                                                                                                                            Visited token: <<IDENT>: "boolean" at line 75 column 9>; Expected token: <<IDENT>>
                                                                                                                                          Return: types(LOOKAHEAD SUCCEEDED)
                                                                                                                                          Visited token: <<IDENT>: "isHomem" at line 75 column 17>; Expected token: <<IDENT>>
                                                                                                                                          Visited token: <"=" at line 75 column 25>; Expected token: <"[">
                                                                                                                                          Call:   assignment(LOOKING AHEAD...)
                                                                                                                                            Visited token: <"=" at line 75 column 25>; Expected token: <"=">
                                                                                                                                            Call:   alocexpression(LOOKING AHEAD...)
                                                                                                                                              Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <"new">
                                                                                                                                            Return: alocexpression(LOOKAHEAD FAILED)
                                                                                                                                            Call:   expression(LOOKING AHEAD...)
                                                                                                                                              Call:   numexpr(LOOKING AHEAD...)
                                                                                                                                                Call:   term(LOOKING AHEAD...)
                                                                                                                                                  Call:   unaryexpr(LOOKING AHEAD...)
                                                                                                                                                    Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <"+">
                                                                                                                                                    Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <"-">
                                                                                                                                                    Call:   factor(LOOKING AHEAD...)
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <"!">
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<char_constant>>
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<byte_constant>>
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<int_constant>>
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<float_constant>>
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<double_constant>>
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<string_constant>>
                                                                                                                                                      Visited token: <<bool_constant>: "true" at line 75 column 27>; Expected token: <<bool_constant>>
                                                                                                                                                      Call:   vardecl
                                                                                                                                                        Call:   types
                                                                                                                                                          Consumed token: <<IDENT>: "boolean" at line 75 column 9>
                                                                                                                                                        Return: types
                                                                                                                                                        Consumed token: <<IDENT>: "isHomem" at line 75 column 17>
                                                                                                                                                        Call:   assignment
                                                                                                                                                          Consumed token: <"=" at line 75 column 25>
                                                                                                                                                          Call:   expression
                                                                                                                                                            Call:   numexpr
                                                                                                                                                              Call:   term
                                                                                                                                                                Call:   unaryexpr
                                                                                                                                                                  Call:   factor
                                                                                                                                                                    Consumed token: <<bool_constant>: "true" at line 75 column 27>
                                                                                                                                                                  Return: factor
                                                                                                                                                                Return: unaryexpr
                                                                                                                                                              Return: term
                                                                                                                                                            Return: numexpr
                                                                                                                                                          Return: expression
                                                                                                                                                        Return: assignment
                                                                                                                                                      Return: vardecl
                                                                                                                                                      Consumed token: <";" at line 75 column 31>
                                                                                                                                                    Return: statement
                                                                                                                                                    Call:   statlist
                                                                                                                                                      Call:   statement
                                                                                                                                                        Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                          Call:   types(LOOKING AHEAD...)
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"byte">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"short">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"int">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"long">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"float">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"double">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"char">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <"string">
                                                                                                                                                            Visited token: <"if" at line 76 column 9>; Expected token: <<IDENT>>
                                                                                                                                                          Return: types(LOOKAHEAD FAILED)
                                                                                                                                                        Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                        Call:   ifstat
                                                                                                                                                          Consumed token: <"if" at line 76 column 9>
                                                                                                                                                          Consumed token: <"(" at line 76 column 11>
                                                                                                                                                          Call:   expression
                                                                                                                                                            Call:   numexpr
                                                                                                                                                              Call:   term
                                                                                                                                                                Call:   unaryexpr
                                                                                                                                                                  Call:   factor
                                                                                                                                                                    Consumed token: <"!" at line 76 column 12>
                                                                                                                                                                    Call:   lvalue
                                                                                                                                                                      Consumed token: <<IDENT>: "isHomem" at line 76 column 13>
                                                                                                                                                                    Return: lvalue
                                                                                                                                                                  Return: factor
                                                                                                                                                                Return: unaryexpr
                                                                                                                                                              Return: term
                                                                                                                                                            Return: numexpr
                                                                                                                                                          Return: expression
                                                                                                                                                          Consumed token: <")" at line 76 column 20>
                                                                                                                                                          Call:   statement
                                                                                                                                                            Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                              Call:   types(LOOKING AHEAD...)
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"byte">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"short">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"int">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"long">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"float">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"double">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"char">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <"string">
                                                                                                                                                                Visited token: <"{" at line 76 column 21>; Expected token: <<IDENT>>
                                                                                                                                                              Return: types(LOOKAHEAD FAILED)
                                                                                                                                                            Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                            Consumed token: <"{" at line 76 column 21>
                                                                                                                                                            Call:   statlist
                                                                                                                                                              Call:   statement
                                                                                                                                                                Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                  Call:   types(LOOKING AHEAD...)
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"byte">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"short">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"int">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"long">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"float">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"double">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"char">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <"string">
                                                                                                                                                                    Visited token: <"print" at line 77 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                  Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                Call:   printstat
                                                                                                                                                                  Consumed token: <"print" at line 77 column 13>
                                                                                                                                                                  Call:   expression
                                                                                                                                                                    Call:   numexpr
                                                                                                                                                                      Call:   term
                                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                                          Call:   factor
                                                                                                                                                                            Consumed token: <"(" at line 77 column 18>
                                                                                                                                                                            Call:   expression
                                                                                                                                                                              Call:   numexpr
                                                                                                                                                                                Call:   term
                                                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                                                    Call:   factor
                                                                                                                                                                                      Consumed token: <<string_constant>: ""Mulher"" at line 77 column 19>
                                                                                                                                                                                    Return: factor
                                                                                                                                                                                  Return: unaryexpr
                                                                                                                                                                                Return: term
                                                                                                                                                                              Return: numexpr
                                                                                                                                                                            Return: expression
                                                                                                                                                                            Consumed token: <")" at line 77 column 27>
                                                                                                                                                                          Return: factor
                                                                                                                                                                        Return: unaryexpr
                                                                                                                                                                      Return: term
                                                                                                                                                                    Return: numexpr
                                                                                                                                                                  Return: expression
                                                                                                                                                                Return: printstat
                                                                                                                                                                Consumed token: <";" at line 77 column 28>
                                                                                                                                                              Return: statement
                                                                                                                                                              Call:   statlist
                                                                                                                                                                Call:   statement
                                                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"byte">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"short">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"int">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"long">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"float">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"double">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"char">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <"string">
                                                                                                                                                                      Visited token: <"print" at line 78 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                  Call:   printstat
                                                                                                                                                                    Consumed token: <"print" at line 78 column 13>
                                                                                                                                                                    Call:   expression
                                                                                                                                                                      Call:   numexpr
                                                                                                                                                                        Call:   term
                                                                                                                                                                          Call:   unaryexpr
                                                                                                                                                                            Call:   factor
                                                                                                                                                                              Consumed token: <"(" at line 78 column 18>
                                                                                                                                                                              Call:   expression
                                                                                                                                                                                Call:   numexpr
                                                                                                                                                                                  Call:   term
                                                                                                                                                                                    Call:   unaryexpr
                                                                                                                                                                                      Call:   factor
                                                                                                                                                                                        Consumed token: <<string_constant>: ""..."" at line 78 column 19>
                                                                                                                                                                                      Return: factor
                                                                                                                                                                                    Return: unaryexpr
                                                                                                                                                                                  Return: term
                                                                                                                                                                                Return: numexpr
                                                                                                                                                                              Return: expression
                                                                                                                                                                              Consumed token: <")" at line 78 column 24>
                                                                                                                                                                            Return: factor
                                                                                                                                                                          Return: unaryexpr
                                                                                                                                                                        Return: term
                                                                                                                                                                      Return: numexpr
                                                                                                                                                                    Return: expression
                                                                                                                                                                  Return: printstat
                                                                                                                                                                  Consumed token: <";" at line 78 column 25>
                                                                                                                                                                Return: statement
                                                                                                                                                                Call:   statlist
                                                                                                                                                                  Call:   statement
                                                                                                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"byte">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"short">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"int">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"long">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"float">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"double">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"char">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <"string">
                                                                                                                                                                        Visited token: <"print" at line 79 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                      Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                    Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                    Call:   printstat
                                                                                                                                                                      Consumed token: <"print" at line 79 column 13>
                                                                                                                                                                      Call:   expression
                                                                                                                                                                        Call:   numexpr
                                                                                                                                                                          Call:   term
                                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                                              Call:   factor
                                                                                                                                                                                Consumed token: <"(" at line 79 column 18>
                                                                                                                                                                                Call:   expression
                                                                                                                                                                                  Call:   numexpr
                                                                                                                                                                                    Call:   term
                                                                                                                                                                                      Call:   unaryexpr
                                                                                                                                                                                        Call:   factor
                                                                                                                                                                                          Consumed token: <<string_constant>: ""..."" at line 79 column 19>
                                                                                                                                                                                        Return: factor
                                                                                                                                                                                      Return: unaryexpr
                                                                                                                                                                                    Return: term
                                                                                                                                                                                  Return: numexpr
                                                                                                                                                                                Return: expression
                                                                                                                                                                                Consumed token: <")" at line 79 column 24>
                                                                                                                                                                              Return: factor
                                                                                                                                                                            Return: unaryexpr
                                                                                                                                                                          Return: term
                                                                                                                                                                        Return: numexpr
                                                                                                                                                                      Return: expression
                                                                                                                                                                    Return: printstat
                                                                                                                                                                    Consumed token: <";" at line 79 column 25>
                                                                                                                                                                  Return: statement
                                                                                                                                                                Return: statlist
                                                                                                                                                              Return: statlist
                                                                                                                                                            Return: statlist
                                                                                                                                                            Consumed token: <"}" at line 80 column 9>
                                                                                                                                                          Return: statement
                                                                                                                                                          Consumed token: <"else" at line 80 column 11>
                                                                                                                                                          Call:   statement
                                                                                                                                                            Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                              Call:   types(LOOKING AHEAD...)
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"byte">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"short">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"int">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"long">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"float">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"double">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"char">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <"string">
                                                                                                                                                                Visited token: <"{" at line 80 column 15>; Expected token: <<IDENT>>
                                                                                                                                                              Return: types(LOOKAHEAD FAILED)
                                                                                                                                                            Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                            Consumed token: <"{" at line 80 column 15>
                                                                                                                                                            Call:   statlist
                                                                                                                                                              Call:   statement
                                                                                                                                                                Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                  Call:   types(LOOKING AHEAD...)
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"byte">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"short">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"int">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"long">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"float">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"double">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"char">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <"string">
                                                                                                                                                                    Visited token: <"print" at line 81 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                  Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                Call:   printstat
                                                                                                                                                                  Consumed token: <"print" at line 81 column 13>
                                                                                                                                                                  Call:   expression
                                                                                                                                                                    Call:   numexpr
                                                                                                                                                                      Call:   term
                                                                                                                                                                        Call:   unaryexpr
                                                                                                                                                                          Call:   factor
                                                                                                                                                                            Consumed token: <"(" at line 81 column 18>
                                                                                                                                                                            Call:   expression
                                                                                                                                                                              Call:   numexpr
                                                                                                                                                                                Call:   term
                                                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                                                    Call:   factor
                                                                                                                                                                                      Consumed token: <<string_constant>: """" at line 81 column 19>
                                                                                                                                                                                    Return: factor
                                                                                                                                                                                  Return: unaryexpr
                                                                                                                                                                                Return: term
                                                                                                                                                                              Return: numexpr
                                                                                                                                                                            Return: expression
                                                                                                                                                                            Consumed token: <")" at line 81 column 21>
                                                                                                                                                                          Return: factor
                                                                                                                                                                        Return: unaryexpr
                                                                                                                                                                      Return: term
                                                                                                                                                                    Return: numexpr
                                                                                                                                                                  Return: expression
                                                                                                                                                                Return: printstat
                                                                                                                                                                Consumed token: <";" at line 81 column 22>
                                                                                                                                                              Return: statement
                                                                                                                                                              Call:   statlist
                                                                                                                                                                Call:   statement
                                                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"byte">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"short">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"int">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"long">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"float">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"double">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"char">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <"string">
                                                                                                                                                                      Visited token: <"print" at line 82 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                  Call:   printstat
                                                                                                                                                                    Consumed token: <"print" at line 82 column 13>
                                                                                                                                                                    Call:   expression
                                                                                                                                                                      Call:   numexpr
                                                                                                                                                                        Call:   term
                                                                                                                                                                          Call:   unaryexpr
                                                                                                                                                                            Call:   factor
                                                                                                                                                                              Consumed token: <"(" at line 82 column 18>
                                                                                                                                                                              Call:   expression
                                                                                                                                                                                Call:   numexpr
                                                                                                                                                                                  Call:   term
                                                                                                                                                                                    Call:   unaryexpr
                                                                                                                                                                                      Call:   factor
                                                                                                                                                                                        Consumed token: <<string_constant>: """" at line 82 column 19>
                                                                                                                                                                                      Return: factor
                                                                                                                                                                                    Return: unaryexpr
                                                                                                                                                                                  Return: term
                                                                                                                                                                                Return: numexpr
                                                                                                                                                                              Return: expression
                                                                                                                                                                              Consumed token: <")" at line 82 column 21>
                                                                                                                                                                            Return: factor
                                                                                                                                                                          Return: unaryexpr
                                                                                                                                                                        Return: term
                                                                                                                                                                      Return: numexpr
                                                                                                                                                                    Return: expression
                                                                                                                                                                  Return: printstat
                                                                                                                                                                  Consumed token: <";" at line 82 column 22>
                                                                                                                                                                Return: statement
                                                                                                                                                                Call:   statlist
                                                                                                                                                                  Call:   statement
                                                                                                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"byte">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"short">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"int">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"long">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"float">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"double">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"char">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <"string">
                                                                                                                                                                        Visited token: <"print" at line 83 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                      Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                    Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                    Call:   printstat
                                                                                                                                                                      Consumed token: <"print" at line 83 column 13>
                                                                                                                                                                      Call:   expression
                                                                                                                                                                        Call:   numexpr
                                                                                                                                                                          Call:   term
                                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                                              Call:   factor
                                                                                                                                                                                Consumed token: <"(" at line 83 column 18>
                                                                                                                                                                                Call:   expression
                                                                                                                                                                                  Call:   numexpr
                                                                                                                                                                                    Call:   term
                                                                                                                                                                                      Call:   unaryexpr
                                                                                                                                                                                        Call:   factor
                                                                                                                                                                                          Consumed token: <<string_constant>: """" at line 83 column 19>
                                                                                                                                                                                        Return: factor
                                                                                                                                                                                      Return: unaryexpr
                                                                                                                                                                                    Return: term
                                                                                                                                                                                  Return: numexpr
                                                                                                                                                                                Return: expression
                                                                                                                                                                                Consumed token: <")" at line 83 column 21>
                                                                                                                                                                              Return: factor
                                                                                                                                                                            Return: unaryexpr
                                                                                                                                                                          Return: term
                                                                                                                                                                        Return: numexpr
                                                                                                                                                                      Return: expression
                                                                                                                                                                    Return: printstat
                                                                                                                                                                    Consumed token: <";" at line 83 column 22>
                                                                                                                                                                  Return: statement
                                                                                                                                                                Return: statlist
                                                                                                                                                              Return: statlist
                                                                                                                                                            Return: statlist
                                                                                                                                                            Consumed token: <"}" at line 84 column 9>
                                                                                                                                                          Return: statement
                                                                                                                                                        Return: ifstat
                                                                                                                                                      Return: statement
                                                                                                                                                      Call:   statlist
                                                                                                                                                        Call:   statement
                                                                                                                                                          Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"byte">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"short">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"int">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"long">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"float">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"double">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"char">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <"string">
                                                                                                                                                              Visited token: <"if" at line 86 column 9>; Expected token: <<IDENT>>
                                                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                                                          Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                          Call:   ifstat
                                                                                                                                                            Consumed token: <"if" at line 86 column 9>
                                                                                                                                                            Consumed token: <"(" at line 86 column 11>
                                                                                                                                                            Call:   expression
                                                                                                                                                              Call:   numexpr
                                                                                                                                                                Call:   term
                                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                                    Call:   factor
                                                                                                                                                                      Call:   lvalue
                                                                                                                                                                        Consumed token: <<IDENT>: "isHomem" at line 86 column 12>
                                                                                                                                                                      Return: lvalue
                                                                                                                                                                    Return: factor
                                                                                                                                                                  Return: unaryexpr
                                                                                                                                                                Return: term
                                                                                                                                                              Return: numexpr
                                                                                                                                                              Consumed token: <"^" at line 86 column 20>
                                                                                                                                                              Call:   numexpr
                                                                                                                                                                Call:   term
                                                                                                                                                                  Call:   unaryexpr
                                                                                                                                                                    Call:   factor
                                                                                                                                                                      Consumed token: <"(" at line 86 column 22>
                                                                                                                                                                      Call:   expression
                                                                                                                                                                        Call:   numexpr
                                                                                                                                                                          Call:   term
                                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                                              Call:   factor
                                                                                                                                                                                Call:   lvalue
                                                                                                                                                                                  Consumed token: <<IDENT>: "genero" at line 86 column 23>
                                                                                                                                                                                Return: lvalue
                                                                                                                                                                              Return: factor
                                                                                                                                                                            Return: unaryexpr
                                                                                                                                                                          Return: term
                                                                                                                                                                        Return: numexpr
                                                                                                                                                                        Consumed token: <"==" at line 86 column 30>
                                                                                                                                                                        Call:   numexpr
                                                                                                                                                                          Call:   term
                                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                                              Call:   factor
                                                                                                                                                                                Consumed token: <<string_constant>: ""homem"" at line 86 column 33>
                                                                                                                                                                              Return: factor
                                                                                                                                                                            Return: unaryexpr
                                                                                                                                                                          Return: term
                                                                                                                                                                        Return: numexpr
                                                                                                                                                                      Return: expression
                                                                                                                                                                      Consumed token: <")" at line 86 column 40>
                                                                                                                                                                    Return: factor
                                                                                                                                                                  Return: unaryexpr
                                                                                                                                                                Return: term
                                                                                                                                                              Return: numexpr
                                                                                                                                                            Return: expression
                                                                                                                                                            Consumed token: <")" at line 86 column 41>
                                                                                                                                                            Call:   statement
                                                                                                                                                              Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                Call:   types(LOOKING AHEAD...)
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"byte">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"short">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"int">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"long">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"float">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"double">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"char">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <"string">
                                                                                                                                                                  Visited token: <"{" at line 86 column 42>; Expected token: <<IDENT>>
                                                                                                                                                                Return: types(LOOKAHEAD FAILED)
                                                                                                                                                              Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                              Consumed token: <"{" at line 86 column 42>
                                                                                                                                                              Call:   statlist
                                                                                                                                                                Call:   statement
                                                                                                                                                                  Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                    Call:   types(LOOKING AHEAD...)
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"byte">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"short">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"int">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"long">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"float">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"double">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"char">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <"string">
                                                                                                                                                                      Visited token: <"print" at line 87 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                    Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                  Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                  Call:   printstat
                                                                                                                                                                    Consumed token: <"print" at line 87 column 13>
                                                                                                                                                                    Call:   expression
                                                                                                                                                                      Call:   numexpr
                                                                                                                                                                        Call:   term
                                                                                                                                                                          Call:   unaryexpr
                                                                                                                                                                            Call:   factor
                                                                                                                                                                              Consumed token: <"(" at line 87 column 18>
                                                                                                                                                                              Call:   expression
                                                                                                                                                                                Call:   numexpr
                                                                                                                                                                                  Call:   term
                                                                                                                                                                                    Call:   unaryexpr
                                                                                                                                                                                      Call:   factor
                                                                                                                                                                                        Consumed token: <<string_constant>: ""Definitivamente é homem"" at line 87 column 19>
                                                                                                                                                                                      Return: factor
                                                                                                                                                                                    Return: unaryexpr
                                                                                                                                                                                  Return: term
                                                                                                                                                                                Return: numexpr
                                                                                                                                                                              Return: expression
                                                                                                                                                                              Consumed token: <")" at line 87 column 44>
                                                                                                                                                                            Return: factor
                                                                                                                                                                          Return: unaryexpr
                                                                                                                                                                        Return: term
                                                                                                                                                                      Return: numexpr
                                                                                                                                                                    Return: expression
                                                                                                                                                                  Return: printstat
                                                                                                                                                                  Consumed token: <";" at line 87 column 45>
                                                                                                                                                                Return: statement
                                                                                                                                                              Return: statlist
                                                                                                                                                              Consumed token: <"}" at line 88 column 9>
                                                                                                                                                            Return: statement
                                                                                                                                                          Return: ifstat
                                                                                                                                                        Return: statement
                                                                                                                                                        Call:   statlist
                                                                                                                                                          Call:   statement
                                                                                                                                                            Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                              Call:   types(LOOKING AHEAD...)
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"byte">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"short">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"int">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"long">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"float">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"double">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"char">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <"string">
                                                                                                                                                                Visited token: <"if" at line 90 column 9>; Expected token: <<IDENT>>
                                                                                                                                                              Return: types(LOOKAHEAD FAILED)
                                                                                                                                                            Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                            Call:   ifstat
                                                                                                                                                              Consumed token: <"if" at line 90 column 9>
                                                                                                                                                              Consumed token: <"(" at line 90 column 12>
                                                                                                                                                              Call:   expression
                                                                                                                                                                Call:   numexpr
                                                                                                                                                                  Call:   term
                                                                                                                                                                    Call:   unaryexpr
                                                                                                                                                                      Call:   factor
                                                                                                                                                                        Consumed token: <<byte_constant>: "2" at line 90 column 13>
                                                                                                                                                                      Return: factor
                                                                                                                                                                    Return: unaryexpr
                                                                                                                                                                  Return: term
                                                                                                                                                                Return: numexpr
                                                                                                                                                                Consumed token: <"<" at line 90 column 15>
                                                                                                                                                                Call:   numexpr
                                                                                                                                                                  Call:   term
                                                                                                                                                                    Call:   unaryexpr
                                                                                                                                                                      Call:   factor
                                                                                                                                                                        Consumed token: <"(" at line 90 column 17>
                                                                                                                                                                        Call:   expression
                                                                                                                                                                          Call:   numexpr
                                                                                                                                                                            Call:   term
                                                                                                                                                                              Call:   unaryexpr
                                                                                                                                                                                Call:   factor
                                                                                                                                                                                  Consumed token: <<byte_constant>: "1" at line 90 column 18>
                                                                                                                                                                                Return: factor
                                                                                                                                                                              Return: unaryexpr
                                                                                                                                                                            Return: term
                                                                                                                                                                            Consumed token: <"+" at line 90 column 19>
                                                                                                                                                                            Call:   term
                                                                                                                                                                              Call:   unaryexpr
                                                                                                                                                                                Call:   factor
                                                                                                                                                                                  Consumed token: <<byte_constant>: "2" at line 90 column 20>
                                                                                                                                                                                Return: factor
                                                                                                                                                                              Return: unaryexpr
                                                                                                                                                                            Return: term
                                                                                                                                                                          Return: numexpr
                                                                                                                                                                        Return: expression
                                                                                                                                                                        Consumed token: <")" at line 90 column 21>
                                                                                                                                                                      Return: factor
                                                                                                                                                                    Return: unaryexpr
                                                                                                                                                                  Return: term
                                                                                                                                                                Return: numexpr
                                                                                                                                                              Return: expression
                                                                                                                                                              Consumed token: <")" at line 90 column 22>
                                                                                                                                                              Call:   statement
                                                                                                                                                                Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                  Call:   types(LOOKING AHEAD...)
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"byte">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"short">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"int">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"long">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"float">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"double">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"char">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <"string">
                                                                                                                                                                    Visited token: <"{" at line 90 column 24>; Expected token: <<IDENT>>
                                                                                                                                                                  Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                Consumed token: <"{" at line 90 column 24>
                                                                                                                                                                Call:   statlist
                                                                                                                                                                  Call:   statement
                                                                                                                                                                    Call:   vardecl(LOOKING AHEAD...)
                                                                                                                                                                      Call:   types(LOOKING AHEAD...)
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"byte">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"short">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"int">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"long">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"float">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"double">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"char">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <"string">
                                                                                                                                                                        Visited token: <"print" at line 91 column 13>; Expected token: <<IDENT>>
                                                                                                                                                                      Return: types(LOOKAHEAD FAILED)
                                                                                                                                                                    Return: vardecl(LOOKAHEAD FAILED)
                                                                                                                                                                    Call:   printstat
                                                                                                                                                                      Consumed token: <"print" at line 91 column 13>
                                                                                                                                                                      Call:   expression
                                                                                                                                                                        Call:   numexpr
                                                                                                                                                                          Call:   term
                                                                                                                                                                            Call:   unaryexpr
                                                                                                                                                                              Call:   factor
                                                                                                                                                                                Consumed token: <"(" at line 91 column 18>
                                                                                                                                                                                Call:   expression
                                                                                                                                                                                  Call:   numexpr
                                                                                                                                                                                    Call:   term
                                                                                                                                                                                      Call:   unaryexpr
                                                                                                                                                                                        Call:   factor
                                                                                                                                                                                          Consumed token: <<string_constant>: ""2 é menor q 1+2"" at line 91 column 19>
                                                                                                                                                                                        Return: factor
                                                                                                                                                                                      Return: unaryexpr
                                                                                                                                                                                    Return: term
                                                                                                                                                                                  Return: numexpr
                                                                                                                                                                                Return: expression
                                                                                                                                                                                Consumed token: <")" at line 91 column 36>
                                                                                                                                                                              Return: factor
                                                                                                                                                                            Return: unaryexpr
                                                                                                                                                                          Return: term
                                                                                                                                                                        Return: numexpr
                                                                                                                                                                      Return: expression
                                                                                                                                                                    Return: printstat
                                                                                                                                                                    Consumed token: <";" at line 91 column 37>
                                                                                                                                                                  Return: statement
                                                                                                                                                                Return: statlist
                                                                                                                                                                Consumed token: <"}" at line 92 column 9>
                                                                                                                                                              Return: statement
                                                                                                                                                            Return: ifstat
                                                                                                                                                          Return: statement
                                                                                                                                                        Return: statlist
                                                                                                                                                      Return: statlist
                                                                                                                                                    Return: statlist
                                                                                                                                                  Return: statlist
                                                                                                                                                Return: statlist
                                                                                                                                                Consumed token: <"}" at line 93 column 5>
                                                                                                                                              Return: statement
                                                                                                                                            Return: methodbody
                                                                                                                                          Return: methoddecl
                                                                                                                                          Call:   modifs(LOOKING AHEAD...)
                                                                                                                                            Call:   modifvisibility(LOOKING AHEAD...)
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"public">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"protected">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"private">
                                                                                                                                            Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                                                                            Visited token: <"}" at line 96 column 1>; Expected token: <"final">
                                                                                                                                          Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                                                                          Call:   methoddecl(LOOKING AHEAD...)
                                                                                                                                            Call:   types(LOOKING AHEAD...)
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"byte">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"short">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"int">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"long">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"float">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"double">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"char">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <"string">
                                                                                                                                              Visited token: <"}" at line 96 column 1>; Expected token: <<IDENT>>
                                                                                                                                            Return: types(LOOKAHEAD FAILED)
                                                                                                                                          Return: methoddecl(LOOKAHEAD FAILED)
                                                                                                                                          Consumed token: <"}" at line 96 column 1>
                                                                                                                                        Return: classbody
                                                                                                                                      Return: classdecl
                                                                                                                                      Call:   classlist(LOOKING AHEAD...)
                                                                                                                                        Call:   classdecl(LOOKING AHEAD...)
                                                                                                                                          Call:   modifs(LOOKING AHEAD...)
                                                                                                                                            Call:   modifvisibility(LOOKING AHEAD...)
                                                                                                                                              Visited token: <<EOF> at line 96 column 2>; Expected token: <"public">
                                                                                                                                              Visited token: <<EOF> at line 96 column 2>; Expected token: <"protected">
                                                                                                                                              Visited token: <<EOF> at line 96 column 2>; Expected token: <"private">
                                                                                                                                            Return: modifvisibility(LOOKAHEAD FAILED)
                                                                                                                                            Visited token: <<EOF> at line 96 column 2>; Expected token: <"final">
                                                                                                                                          Return: modifs(LOOKAHEAD SUCCEEDED)
                                                                                                                                          Visited token: <<EOF> at line 96 column 2>; Expected token: <"class">
                                                                                                                                        Return: classdecl(LOOKAHEAD FAILED)
                                                                                                                                      Return: classlist(LOOKAHEAD FAILED)
                                                                                                                                    Return: classlist
                                                                                                                                    Consumed token: <<EOF> at line 96 column 2>
                                                                                                                                  Return: program
0 erros léxico encontrados
0erros sintáticos encontrados
