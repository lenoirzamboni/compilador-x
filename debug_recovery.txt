X++ Compiler - Version 1.0 - 2004
Lendo o arquivo exemplos/exemplo1-com-erros.x . . .

*** classbody ***
     Syncronizing Set: class 
     Ignoring token: final
     Ignoring token: private
     Found syncronizing token: class
Encountered " "final" "final "" at line 5, column 5.
Was expecting one of:
    "constructor" ...
    "}" ...
    "public" ...
    "protected" ...
    "private" ...
    

*** program ***
     Syncronizing Set: class 
     Found syncronizing token: class

*** classdecl ***
     Syncronizing Set: class 
     Ignoring token: {
     Ignoring token: }
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <char_constant>
     Ignoring token: ;
     Ignoring token: byte
     Ignoring token: final
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: ;
     Ignoring token: private
     Ignoring token: final
     Ignoring token: short
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: protected
     Ignoring token: <double_constant>
     Ignoring token: ;
     Ignoring token: public
     Ignoring token: float
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <double_constant>
     Ignoring token: ;
     Ignoring token: float
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <double_constant>
     Ignoring token: ;
     Ignoring token: string
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <string_constant>
     Ignoring token: ;
     Ignoring token: int
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: ;
     Ignoring token: int
     Ignoring token: <IDENT>
     Ignoring token: ;
     Ignoring token: int
     Ignoring token: <IDENT>
     Ignoring token: ;
     Ignoring token: string
     Ignoring token: <IDENT>
     Ignoring token: ;
     Ignoring token: public
     Ignoring token: <IDENT>
     Ignoring token: (
     Ignoring token: )
     Ignoring token: {
     Ignoring token: for
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: ;
     Ignoring token: ;
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: +
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: )
     Ignoring token: {
     Ignoring token: for
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: <
     Ignoring token: <IDENT>
     Ignoring token: ;
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: +
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: )
     Ignoring token: {
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: }
     Ignoring token: }
     Ignoring token: private
     Ignoring token: <IDENT>
     Ignoring token: (
     Ignoring token: )
     Ignoring token: {
     Ignoring token: if
     Ignoring token: (
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: &&
     Ignoring token: (
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: )
     Ignoring token: {
     Ignoring token: int
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <byte_constant>
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: if
     Ignoring token: (
     Ignoring token: )
     Ignoring token: {
     Ignoring token: if
     Ignoring token: (
     Ignoring token: (
     Ignoring token: )
     Ignoring token: >
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: else
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: }
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: }
     Ignoring token: protected
     Ignoring token: final
     Ignoring token: <IDENT>
     Ignoring token: <IDENT>
     Ignoring token: (
     Ignoring token: )
     Ignoring token: {
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <string_constant>
     Ignoring token: ;
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: <
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: public
     Ignoring token: int
     Ignoring token: <IDENT>
     Ignoring token: (
     Ignoring token: )
     Ignoring token: {
     Ignoring token: while
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: !=
     Ignoring token: <byte_constant>
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <string_constant>
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: <IDENT>
     Ignoring token: <IDENT>
     Ignoring token: (
     Ignoring token: string
     Ignoring token: <IDENT>
     Ignoring token: )
     Ignoring token: {
     Ignoring token: switch
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: )
     Ignoring token: {
     Ignoring token: case
     Ignoring token: :
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: case
     Ignoring token: <string_constant>
     Ignoring token: :
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: default
     Ignoring token: :
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: }
     Ignoring token: <IDENT>
     Ignoring token: <IDENT>
     Ignoring token: (
     Ignoring token: )
     Ignoring token: {
     Ignoring token: if
     Ignoring token: (
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: ==
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: ==
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: )
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: else
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: <IDENT>
     Ignoring token: <IDENT>
     Ignoring token: =
     Ignoring token: <bool_constant>
     Ignoring token: ;
     Ignoring token: if
     Ignoring token: (
     Ignoring token: !
     Ignoring token: <IDENT>
     Ignoring token: )
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: else
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: if
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: ^
     Ignoring token: (
     Ignoring token: <IDENT>
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: )
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: if
     Ignoring token: (
     Ignoring token: <byte_constant>
     Ignoring token: <
     Ignoring token: (
     Ignoring token: <byte_constant>
     Ignoring token: +
     Ignoring token: <byte_constant>
     Ignoring token: )
     Ignoring token: )
     Ignoring token: {
     Ignoring token: print
     Ignoring token: (
     Ignoring token: <string_constant>
     Ignoring token: )
     Ignoring token: ;
     Ignoring token: }
     Ignoring token: }
     Ignoring token: }
Encountered " "{" "{ "" at line 5, column 25.
Was expecting:
    <IDENT> ...
    
EOF found prematurely.
0 erros léxico encontrados
2 erros sintáticos encontrados

